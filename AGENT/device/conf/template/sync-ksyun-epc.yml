download:
  - url: "cmd:c3mc-cloud-ksyun-epc ak sk cn-beijing-6 | c3mc-base-json2tab  HostId 实例ID HostName 名称 NetworkInterfaceAttributeSet.0.PrivateIpAddress  内网IP RegionId Region名称 AvailabilityZone 所在可用区 HostStatus 状态 OsName 操作系统"
    datatype: tsv # 固定值。表示url中命令最终输出的文件格式
    type: compute # 资源类型。cmdb页面中的分类
    subtype: ksyun-epc # 上面资源类型的子类型。
    init: ["install-python2.sh", "c3mc-cloud-ksyun.sh"]
    treeinfo:
      treename: "服务树" # 指明哪一列对应服务树。这一列没有对应列，页面显示的值为空
      treeinfo:
        - ["实例ID", "instance"] # 和监控相关 。 指标是 treeinfo
    check:
      col: [
          "实例ID",
          "名称",
          "内网IP",
          "Region名称",
          "所在可用区",
          "状态",
          "操作系统",
        ] # 打印出的数据必须有的字段
      min: 1 # url中命令执行后最少输出行数，否则认为命令出错
    ingestion-node: # 控制资源在发布时的可见字段，但是cmdb里一直可见
      name: "名称"
      inip: "内网IP"
      exip: "公网IP"
      tree: "服务树"
      type: ksyun-epc
    util:
      defaulttree: defaulttree.pool # 默认的服务树，资源归还后被放到这里
    colmap:
      treename: "服务树"
      uuid: "实例ID" # 指明哪一列作为uuid列。没有这个字段会导致单个资源详情打开无数据
    filter:
      - name: "Region名称"
        alias: 区域
      - name: "所在可用区"
        alias: 可用区
      - name: "状态"
        alias: 状态
      - name: "操作系统"
        alias: 操作系统

    outline:
      uuid:
        - "实例ID"
      baseinfo:
        - "Region名称"
        - "所在可用区"
      system:
        - "名称"
        - "内网IP"
      contact:
        - "服务树"
