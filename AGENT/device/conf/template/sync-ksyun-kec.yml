download:
  - url: "cmd:c3mc-cloud-account -p c3mc-cloud-ksyun-kec --account ksyun | c3mc-cloud-tag Tag Key Value None | c3mc-base-json2tab "
    datatype: tsv # 固定值。表示url中命令最终输出的文件格式
    type: compute # 资源类型。cmdb页面中的分类
    subtype: ksyun-kec # 上面资源类型的子类型。
    init: ["install-python2.sh", "install-pip.sh", "c3mc-cloud-ksyun.sh"]
    treeinfo:
      treename: "服务树" # 指明哪一列对应服务树。这一列没有对应列，页面显示的值为空
      treeinfo:
        - ["实例ID", "instance"] # 和监控相关 。 指标是 treeinfo
    check:
      col: ["实例ID"] # 打印出的数据必须有的字段
      min: 0 # url中命令执行后最少输出行数，否则认为命令出错
    ingestion-node: # 控制资源在发布时的可见字段，但是cmdb里一直可见
      name: "名称"
      inip: "内网IP"
      exip: "公网IP"
      tree: "服务树"
      type: ksyun-kec
    util:
      defaulttree: defaulttree.pool # 默认的服务树，资源归还后被放到这里
      extcol:
        - name: audit
          alias: 审计
          select: ["YES", "NO"]
        - name: remarks
          alias: 备注
    colmap:
      treename: "服务树"
      uuid: "实例ID" # 指明哪一列作为uuid列。没有这个字段会导致单个资源详情打开无数据
    alias:
      InstanceId: "实例ID"
      InstanceName: "名称"
      PrivateIpAddress: "内网IP"
      RegionId: "Region名称: "
      AvailabilityZone: "所在可用区"
      InstanceType: "实例类型"
      InstanceState.Name: "状态"
      Platform: "操作系统"
      HostName: "主机名"
      product_owner: "业务负责人"
      ops_owner: "运维负责人"
      department: "部门"
    filter:
      - name: "account"
        alias: 账号
      - name: "Region名称"
        alias: 区域
      - name: "所在可用区"
        alias: 可用区
      - name: "实例类型"
        alias: 实例类型
      - name: "状态"
        alias: 状态
      - name: "操作系统"
        alias: 操作系统
      - name: "业务负责人"
        alias: 业务负责人
      - name: "运维负责人"
        alias: 运维负责人
      - name: "部门"
        alias: 部门
    outline:
      uuid:
        - "实例ID"
      baseinfo:
        - "account"
        - "实例ID"
        - "名称"
        - "Region名称"
      system:
        - "主机名"
        - "内网IP"
        - "所在可用区"
      contact:
        - "服务树"
        - "部门"
        - "业务负责人"
        - "运维负责人"
