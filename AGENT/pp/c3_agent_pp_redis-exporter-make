#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/AGENT/lib -I/data/Software/mydan/AGENT/private/lib
use strict;
use warnings;

binmode STDIN, ':utf8';
binmode STDOUT, ':utf8';
binmode STDERR, ':utf8';

$|++;

use MYDB;
use FindBin qw( $RealBin );
use MYDan::Util::OptConf;
use YAML::XS;
use Encode;

=head1 SYNOPSIS

 $0
 $0 --output /path/foo,yaml

=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->get( qw( output=s ) )->dump();

my %conf;
while(<STDIN>){
    chomp;
    my $c = $_;
    if( $c && $c !~ /'/ )
    {
        $conf{$c} = 1;
    }
    else { warn "conf: $c"; }
}

sub get
{
    my %has;
    my @ps = `docker ps`;
    chomp @ps;
    my @name = map{ my ( $x )= reverse split /\s+/, $_;$x }@ps;
    map{ $has{$_} = 1 if /^openc3-redis-exporter-(\d+\.\d+\.\d+\.\d+-\d+)$/; }@name;
    return %has;
}

my %has = get();

sub run
{
    my ( $conf, $has ) = @_;

    die "format err" unless $conf && $conf =~ /(\d+\.\d+\.\d+\.\d+:\d+)/;
    my $name = $1;
    $name =~ s/:/-/;
    $name = "openc3-redis-exporter-$name";

    return if $has->{$name};
    system "docker rm $name >/dev/null 2>&1";
    system "docker run -d --network c3_JobNet --name $name oliver006/redis_exporter -redis.addr $conf";
}

map{ run( $_, \%has ); }keys %conf;
