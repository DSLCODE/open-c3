#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/AGENT/lib -I/data/Software/mydan/AGENT/private/lib
use strict;
use warnings;
use FindBin qw( $RealBin );
use Data::Dumper;

use MYDan::Util::OptConf;
use OPENC3::PP::Server;
use OPENC3::PP::Exec;

=head1 SYNOPSIS

 $0 servername

=cut

$|++;
die unless my $name = shift @ARGV;

if( $name eq 'promesd' )
{
    my $nodetemp = "$RealBin/../conf/promesd.temp";
    my $tempfile = "$nodetemp.$$";

    OPENC3::PP::Server->new(
        name => "agent_server_$name",
        interval => 1800,
        timeout => 3600,
    )->run(
       "c3_connector_pp_treemap | awk -F';' '{print \$1}'| c3_job_pp_nodeinfo -c projectid,inip | tee $tempfile | c3_agent_pp_sdformat --output $RealBin/../../prometheus/config/openc3_node_sd.yml",
       "mv $tempfile $nodetemp",
    );
}

if( $name eq 'rule' )
{
    OPENC3::PP::Server->new(
        name => "agent_server_$name",
        interval => 60,
        timeout => 120,
    )->run(
        "c3_agent_pp_rule --output $RealBin/../../prometheus/config/openc3_rule.yml",
        "curl -XPOST http://OPENC3_PROMETHEUS_IP:9090/-/reload 2>/dev/null",
    );
}

if( $name eq 'carry' )
{
    OPENC3::PP::Server->new(
        name => "agent_server_$name",
        interval => 60,
        timeout => 120,
    )->run(
        "cat $RealBin/../conf/promesd.temp | c3_agent_pp_carry --output $RealBin/../conf/openc3_carry.yml",
        "cat $RealBin/../conf/promesd.temp | awk -F';' '{print \$2}'|c3_agent_pp_getproxy --output $RealBin/../conf/openc3_proxy.yml",
    );
}

if( $name eq 'sender' )
{
    $0 = 'agent_server_sender';

    $ENV{PATH} = "$ENV{PATH}:/data/Software/mydan/AGENT/pp:/data/Software/mydan/Connector/pp";

    chdir "/data/open-c3-data/monitor-sender" or die "chdir fail: $!";
    map{ die if system "mkdir -p  $_"; }qw( zsucc zfail );

    warn ">> start\n";
    while(1)
    {
        my $time = time;
        for my $file ( glob "sender.*.wait" )
        {
             my $stat = OPENC3::PP::Exec->new( timeout => 15 )->run( "c3_agent_pp_senderinfo $file | c3_agent_pp_senderadduser | c3_agent_pp_senderaddcont | c3_connector_pp_send" ) ? 'succ' : 'fail';

             my $newfile = $file; $newfile =~ s/wait$/$stat/;
             die if system "mv $file z$stat/$newfile";
        }

        my $usetime = time - $time;
        warn "timeout $usetime" if $usetime > 60;
        sleep 6 if $usetime < 6;
    }
}

if( $name eq 'extend-exporter' )
{
    $ENV{PATH} = "$ENV{PATH}:/data/Software/mydan/AGENT/pp";

    my @cmd;

    for my $type ( qw( mysql redis ) )
    {
        my $file = "$RealBin/../config/$type-exporter.conf";
        next unless -f $file;

        push @cmd, "cat $file | c3_agent_pp_$type-exporter-make";
        push @cmd, "cat $file | c3_agent_pp_$type-exporter-clean";
        push @cmd, "cat $file | c3_agent_pp_sd-$type-format --output $RealBin/../../prometheus/config/openc3_${type}_sd.yml";
    }

    unless( @cmd ) { sleep 10000000000; exit; } 

    OPENC3::PP::Server->new(
        name => "agent_server_$name",
        interval => 300,
        timeout => 120,
    )->run( @cmd );

}
