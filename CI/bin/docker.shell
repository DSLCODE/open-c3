#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use Data::Dumper;
use FindBin qw( $RealBin );
use Code;
use MYDB;

exit unless my $argv = shift;

my ( $u, $image, $projectid, $tag );

eval{
    if( $argv =~ /^\?u=(.+)&image=(.+)&projectid=(.+)&tag=(.+)$/ )
    {
        ( $u, $image, $projectid, $tag ) = ( $1, $2, $3, $4 );
    }
    elsif( $argv =~ /^\?u=(.+)&image=(.+)&projectid=(.+)$/ )
    {
        ( $u, $image, $projectid ) = ( $1, $2, $3 );
    }
    else
    {
        die "param error\n";
    }
    
    my $db = MYDB->new( "$RealBin/../conf/conn" );

    if( $image =~ /^\d+$/ )
    {
        my $sso = Code->new( 'auth/sso' );
        my ( $user, $company ) = $sso->run( cookie => $u );
        print "user:$user, company:$company\n";

        my $checkauth = $db->query( "select name from images where id='$image' and ( create_user='$user' or share='$company' )" );
        die "no permission\n" unless @$checkauth;

        my $imagename = $checkauth->[0][0];
        if( $imagename =~ /^\d+\.\d+\.\d+\.\d+$/ )
        {
            system "MYDan_Agent_KEY_PATH=/data/glusterfs/dockerimage/$image.key /data/Software/mydan/JOB/bin/cmd.bash  --host '$imagename' --user 'root' --sudo 'root' --projectid $projectid";
            sleep 100;
        }
    }

    if( $image =~ /^\d+$/ )
    {
        my $x = `docker images openc3ci:$image --format "{{.Repository}}"`;

        unless( $x && $x =~ /^openc3ci/ )
        {
            print "load images\n";
            my $imagesfilepath = "/data/glusterfs/dockerimage/$image";
            die "load images fail:$!" if system "/data/Software/mydan/CI/bin/docker-load --file $imagesfilepath --name openc3ci:$image";
        }
        $image = "openc3ci:$image";
    }


    print "image: $image\n";
    print "projectid: $projectid\n";
    printf "tag: %s\n", $tag || 'null';
    
    my $gid = $db->query( "select groupid from project where id=$projectid" );
    die "nofind the projectid in ci" unless $gid && @$gid > 0;

    my $treeid = $gid->[0][0];
    print "treeid: $treeid\n";

    my $pms = Code->new( 'auth/pms' );
    my $p = eval{ $pms->run( cookie => $u, treeid => $treeid, point => 'openc3_ci_control' ) };
    die "no permission\n" unless $p;
    
    print "OK\n";
    
    my $t = $tag ? " --tags $tag" : '';
    system "$0.into --image '$image' --projectid '$projectid' $t";
};

print $@ if $@;

sleep 1000;
