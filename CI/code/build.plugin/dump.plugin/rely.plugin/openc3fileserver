#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;

use Logs;
use FindBin qw( $RealBin );
use Temp;
use MIME::Base64;
use File::Basename;
use Encode;
use Util;
use JSON;



$| ++;

=head1 SYNOPSIS

    db => $mysql,
    logs => 日志对象

    #index uuid temp path addr ticketid tags

=cut

return sub
{
    my %param = @_;

    my ( $db,$logs, $index, $uuid, $temp, $path, $addr, $ticketid, $tags, $treeid  ) 
        = @param{qw(db logs index uuid temp path addr ticketid tags treeid )};

    $logs = Logs->new( 'code.build.dump.rely.openc3fileserver' ) unless $logs;

    my $temppath = "$RealBin/../logs/$temp/$uuid/rely/$index";
    if( -d $temppath )
    {
        $logs->die( "clean old temppath fail:$!" ) if system "rm -rf '$temppath'";
    }
    $logs->die( "mkdir temppath fail:$!" ) if system "mkdir -p '$temppath'";

    my $md5;
    if( defined $treeid && $treeid =~ /^\d+$/ && defined $tags && $tags =~ /^[a-zA-Z0-9\.\-_\@]+$/ )
    {
        $md5 = `c3mc-base-db-get -t openc3_job_fileserver md5 -f 'projectid=$treeid and status="available" and name="$tags"'`;
         chomp $md5;
    }

    $logs->die( "nofind md5" ) unless $md5;

    my $version = $tags;
    my $filepath = "/data/glusterfs/fileserver/$treeid/$md5";

    $logs->die( "clone error:$!" ) if system "cd '$temppath' && rm -rf data info && mkdir data && mkdir info && tar -zxvf '$filepath' -C data && echo '$version' > info/version";

    if( $path )
    {
        $logs->die( "path format error" ) unless $path =~ /^[a-zA-Z0-9\.\-\_\/]+$/ && $path =~ /[a-zA-Z0-9]+/;
        my $subpath = "$RealBin/../logs/$temp/$uuid/data/$path";
        my $pathbase = dirname $subpath;

        unless( -d $pathbase )
        {
            $logs->die( "mkdir subpath fail:$!" ) if system( "mkdir -p '$pathbase'" );
        }

        if( -e $subpath )
        {
            $logs->die( "remove subpath fail:$!" ) if system( "rm -rf '$subpath'" );
        }

        $logs->die( "mv subpath fail:$!" ) if system "mv '$temppath/data' '$subpath'";
    }
    else
    {
        my $subpath = "$RealBin/../logs/$temp/$uuid/data$index";
        my $pathbase = dirname $subpath;

        unless( -d $pathbase )
        {
            $logs->die( "mkdir subpath fail:$!" ) if system( "mkdir -p '$pathbase'" );
        }

        if( -e $subpath )
        {
            $logs->die( "remove subpath fail:$!" ) if system( "rm -rf '$subpath'" );
        }

        $logs->die( "mv subpath fail:$!" ) if system "mv '$temppath/data' '$subpath'";
    }
}
