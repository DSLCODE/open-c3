#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use JSON;
use Logs;
use Encode;
use Util;

$| ++;

=head1 SYNOPSIS

    db => $mysql,
    logs => 日志对象
=cut

return sub
{
    my %param = @_;
    my ( $logs, $projectid, $groupid, $version, $tagger ) = @param{qw( logs projectid groupid version tagger )};
    print '=' x 75, "\n";
    print "callonlineenv...\n";

    $logs = Logs->new( 'code.build.send.callonlineenv' ) unless $logs;

    my $xto = `c3mc-sys-ctl cd.task.open.to.ci.online`;
    chomp $xto;
    $logs->die( "The system has been temporarily shut down. Please contact the administrator\n" ) unless $xto && $xto eq '1';

    #HTTP::Message content must be bytes at
    my ( $jobname, $jobgroup ) = ( '_ci_' . $projectid . '_', '_ci_online_' . $projectid . '_');

    unless( $tagger && $tagger =~ /^[a-zA-Z0-9][a-zA-Z0-9\-\._@]*[a-zA-Z0-9]$/ )
    {
        print "Warn: error tagger format: $tagger\n";
        $tagger = 'unkown';
    }

    my $lastversion = `c3mc-base-db-get -t openc3_jobx_flowline_version version -f 'flowlineid=$projectid'`;
    chomp $lastversion;

    my $variablekv = "version=$version,_jobtype_=online,_appname_=_ci_${projectid}_,tagger=$tagger";
    $variablekv .= ",_rollbackVersion_=$lastversion" if $lastversion;

    my $uuid = `c3mc-jobx-task-run $groupid $jobname $jobgroup --user ci\@app --variablekv $variablekv`;
    chomp $uuid;

    $logs->die( "deploy online env fail" ) unless $uuid && $uuid =~ /^[a-zA-Z0-9]{12}$/;

    printf "call jobx ok: jobxuuid:%s\n", $uuid;

    return;
}
