#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use JSON;
use Logs;
use MIME::Base64;

$| ++;

=head1 SYNOPSIS

    db => $mysql,
    id => id,

    logs => 日志对象

    addr => ''
    ticketid => ''

=cut

return sub
{
    my %param = @_;

    my ( $db, $id, $logs, $addr, $ticketid )
        = @param{qw( db id logs addr ticketid )};

    $logs = Logs->new( 'code.findtags.aliyuncr' ) unless $logs;

    $logs->die( "id format error" ) unless $id =~ /^\d+$/;


    $logs->die( "addr format error" ) unless $addr =~ /^aliyuncr:\/\/([a-zA-Z0-9\.;=\-_\+\/,:]+)$/;
    my ( $domain, $repoNamespace, $repoName ) = split /\//, $1;
    
    my @list;
    eval{
        alarm 10;
        my $str = `aliyun  cr GetRepoTags --PageSize 100 --RepoNamespace '$repoNamespace' --RepoName '$repoName' --Page 1 2>/dev/null`;
        my $data = eval{JSON::from_json $str};

        map{ push @list, $_->{tag} }@{$data->{data}{tags}};
        alarm 0; 
    };

    return @list;
}
