#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use Logs;
use MIME::Base64;

$| ++;

=head1 SYNOPSIS

    db => $mysql,
    id => id,

    logs => 日志对象

    addr => ''
    ticketid => ''

=cut

return sub
{
    my %param = @_;

    my ( $db, $id, $logs, $addr, $ticketid )
        = @param{qw( db id logs addr ticketid )};

    $logs = Logs->new( 'code.findtags.svn' ) unless $logs;

    $logs->die( "id format error" ) unless $id =~ /^\d+$/;


    my ( $username, $pass );

    if( $ticketid )
    {
        my $x = eval{ $db->query( "select ticket from openc3_ci_ticket where id='$ticketid' and type='UsernamePassword'" )};  
        $logs->die( "get data from ticket fail:$@" ) if $@;
        ( $username, $pass ) = split /_:separator:_/, $x->[0][0] if @$x;
    }

    #TODO
    #my $ctrl = $pass ? "svn --username '$username'  --password '" . decode_base64( $pass ) . "'" : 'svn';
    my $ctrl = $pass ? "svn --username '$username'  --password '" . $pass . "'" : 'svn';

    my @list; eval{ alarm 10; @list = `$ctrl list $addr/tags/`; alarm 0; };
    map{ chomp $_ }@list;

    my @tags;
    map{ $_ =~ s/\/$//; push @tags, $_ if $_ =~ /^release/ }@list;
    @tags = grep{ $_ !~ /\^\{\}$/ }@tags;

    return @tags;
}
