AWS_alb:
  alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  alb.ingress.kubernetes.io/backend-protocol: HTTP
  alb.ingress.kubernetes.io/certificate-arn: arn:aws-cn:acm:cn-northwest-1:XXXXXX
  alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
  alb.ingress.kubernetes.io/healthcheck-path: /
  alb.ingress.kubernetes.io/healthcheck-port: traffic-port
  alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
  alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "4"
  alb.ingress.kubernetes.io/healthy-threshold-count: "3"
  alb.ingress.kubernetes.io/ip-address-type: ipv4
  alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
  alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=false
  alb.ingress.kubernetes.io/scheme: internet-facing
  alb.ingress.kubernetes.io/security-groups: sg-08XXXX
  alb.ingress.kubernetes.io/subnets: subnet-XXXXX
  alb.ingress.kubernetes.io/success-codes: 200,404,302,301
  alb.ingress.kubernetes.io/tags: OpsOwner=XXXXX
  alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
  alb.ingress.kubernetes.io/target-type: instance
  alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
  kubernetes.io/ingress.class: alb

AWS_nlb:
  service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
  service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-XXXXX"
  service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "OpsOwner=XXXXX"

Qcloud_ipv4:
  kubernetes.io/ingress.class: qcloud
  kubernetes.io/ingress.extensiveParameters: '{"AddressIPVersion":"IPV4"}'
  kubernetes.io/ingress.http-rules: '[{"host":"XXXXX","path":"XXXXX","backend":{"serviceName":"XXXXX","servicePort":"XXXXX"}}]'
  kubernetes.io/ingress.https-rules: '[{"host":"XXXXX,"path":"XXXXX","backend":{"serviceName":"XXXXX","servicePort":XXXXX}}]'
  kubernetes.io/ingress.rule-mix: "true"

Qcloud_ipv6:
  kubernetes.io/ingress.class: qcloud
  kubernetes.io/ingress.extensiveParameters: '{"AddressIPVersion":"IPV6"}'
  kubernetes.io/ingress.http-rules: '[{"host":"XXXXX","path":"XXXXX","backend":{"serviceName":"XXXXX","servicePort":"XXXXX"}}]'
  kubernetes.io/ingress.https-rules: '[{"host":"XXXXX,"path":"XXXXX","backend":{"serviceName":"XXXXX","servicePort":XXXXX}}]'
  kubernetes.io/ingress.rule-mix: "true"
