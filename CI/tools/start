#!/data/Software/mydan/perl/bin/perl
use strict;
use warnings;
use FindBin qw( $RealBin );
use YAML::XS;
use MYDan;

=head1 SYNOPSIS

 $0

=cut

my $service = shift @ARGV;

my $base = $RealBin;
$base =~ s#/[^/]+$##;

print "start ci\n";


my $Config = eval{ YAML::XS::LoadFile "$RealBin/../config/Config";};
die "load Config fail: $!" unless $Config;

my $envname = `cat $RealBin/../conf/envname`;
chomp $envname;
die "envname undef" unless $envname;

die "envname $envname undef in Config" unless $Config = $Config->{$envname};

die "port undef" unless my $port = $Config->{port};

my $supervisor = "$RealBin/../../JOB/bin/supervisor --err /var/log/open-c3.error.log";

map{
    die "start api fail: $!" if  system "$supervisor --name ci_supervisor_$_ --errname 'ci.api.$_' --cmd '$base/bin/api -p $_' --log '$base/logs/server/api.$_' --http http://127.0.0.1:$_/mon --check ok";
    print "start api port: $_\n"
}grep{ ( ! $service ) || ( $service && $service eq $_ ) }
$port->{api}{from} .. $port->{api}{to};

map{
    die "start api.slave fail: $!" if system "$supervisor --name ci_supervisor_$_ --errname 'ci.api.slave.$_' --cmd '$MYDan::PATH/perl/bin/twiggy $base/bin/api.slave --port $_' --log '$base/logs/server/api.slave.$_' --http http://127.0.0.1:$_/mon --check ok";
    print "start api.slave port: $_\n"
}grep{ ( ! $service ) || ( $service && $service eq $_ ) }
$port->{'api.slave'}{from} .. $port->{'api.slave'}{to};

map{
    die "start api.event fail: $!" if system "$supervisor --name ci_supervisor_$_ --errname 'ci.api.event.$_' --cmd 'CI_API_EVENT_PORT=$_ $base/bin/api.event' --log '$base/logs/server/api.event.$_' --http http://127.0.0.1:$_/mon --check ok";
    print "start api.event port: $_\n"
}grep{ ( ! $service ) || ( $service && $service eq $_ ) }
$port->{'api.event'}{from} .. $port->{'api.event'}{to};

#map{
#    die "start $_ fail: $!" if system "$supervisor --errname 'ci.server.$_' --cmd '$base/server/$_' --log '$base/logs/server/$_'";
#}qw( bury );

map{
    die "start $_ fail: $!" if system "$supervisor --name ci_supervisor_$_ --errname 'ci.server.$_' --cmd 'c3mc-server-ci $_' --log '$base/logs/server/$_'";
}grep{ ( ! $service ) || ( $service && $service eq $_ ) }
qw( keepalive findtags findtagsonce build clean bury flowreport );
