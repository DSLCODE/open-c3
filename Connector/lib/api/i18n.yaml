仪表盘: ['Dashboard']
监控: 'Monitor'
监控看板: 'Monitor Dashbord'
监控事件:  'Monitor Event'
监控配置: 'Monitor Config'
报警组管理: 'Alarm group management'
值班管理: 'OnCall'
监控告警报告: 'Monitoring alarm report'
主机低利用率: 'Host low utilization'
邮件监控: 'Email Monitor'
故障自愈: 'Fault self-healing'
流水线: 'Flow'
快速执行: 'Quick execution'
启动任务: 'Start Task'
脚本执行: 'Script Execution'
分发文件: 'Sync file'
发起审批: 'Run a approval'
虚拟终端: 'Web Shell'
文件发送: 'File Control'
业务管理: 'Business management'
作业管理: 'job management'
账户管理: 'Account management'
文件管理: 'file management'
脚本管理: 'Script Management'
机器分组: 'Machine grouping'
机器分批: 'Machine batching'
机器管理: 'Machine management'
报警通知: 'Alarm notification'
定时作业: 'crontab'
代理设置(AGENT安装): 'Proxy settings (AGENT installation)'
变量查看: 'Variable View'
轻应用: 'Light application'
容器集群: 'Container cluster'
应用管理: 'Application management'
工单: 'Trouble Ticketing System'
文档: 'Docs'
报告: 'Report'
执行历史: 'Execution History'
分组任务: 'Group Tasks'
作业任务: 'Job Tasks'
虚拟终端: 'Web Shell'
监控告警: 'Monitoring alarm'
管理: 'Management'
全局信息: 'Global information'
通知管理: 'Notification management'
模板管理: 'Template Management'
系统参数: 'System configuration'
监控信息: 'System monitoring'
审计日志: 'Audit Log'
轻应用配置: 'Light application configuration'
地址簿管理: 'Address Book Management'
ACK管理: 'ACK Management'
作业平台: 'JOB'
监控系统-服务树继承解除: 'Monitoring System - Service Tree Inheritance Cancellation'
用户部门关系绑定: 'User department relation binding'
私有节点管理: 'Private node management'
CI任务监视器: 'CI Task Monitor'
网络监视器: 'Network Monitor'
管理员审批管理: 'Administrator approval management'
云监控: 'Cloud monitoring'
连接器: 'Connector'
设置连接器: 'Set Connector'
用户管理: 'user management'
权限管理: 'Permission management'
编辑服务树节点: 'Edit Service Tree Node'
编辑服务树资源: 'Edit Service Tree Resource'
给我的邮件: 'Mail to me'
给我的短信: 'Message to me'
用户: 'User'
组织: 'Organization'
我的收藏夹: 'My Favorite'
我的审批: 'My Approval'
我的ACK: 'My ACK'
告警事件: 'Alarm event'
操作协助: 'Operation assistance'
我的凭据: 'My credentials'
我的镜像: 'My image'
版本信息: 'Version information'
修改密码: 'Change Password'
登出: 'Logout'
业务主机数: 'Number of service hosts'
常用作业数: 'Number of common job'
本月执行任务数: 'Number of tasks executed this month'
成功: 'success'
失败: 'fail'
执行中: 'running'
定时任务数: 'Number of scheduled tasks'
启动: 'start-up'
暂停: 'pause'
历史任务执行情况: 'Historical task execution'
任务执行时长统计: 'Statistics of task execution duration'
最近任务执行记录: 'Recent Task Execution Record'
更多: 'More'
执行用户: 'Executor'
耗时: 'take up time'
当前状态: 'Status'
作业名称: 'Job Name'
全局搜索: 'global search'
数量: 'quantity'
耗时: 'time consuming'
过期: 'Expire'
无: 'Nothing'
计算资源: 'Compute'
网络: 'Networking'
存储: 'Storage'
数据库: 'database'
域名: 'Domain'
其他: 'Others'
过滤器: 'Filter'
重置: 'Reset'
看板管理: 'Dashbord management'
选择看板: 'Select Dashbord'
在新页面打开grafana: 'Open grafana on a new tab'
监控看板: 'Monitor Dashbord'
体验版不支持该功能: 'The trial version does not support this features'
主机监控: 'Host monitoring'
全局告警事件: 'Global alarm event'
屏蔽: 'Mask messages'
时间: 'Time'
实例: 'instance'
标题: 'title'
操作: 'operation'
服务树继承解除: 'Service tree inheritance cancellation'
保存新状态: 'Save New State'
节点主机资源: 'Host Resource'
机器名称: 'Hostname'
类型: 'Type'
内网IP: 'Private IP'
外网IP: 'Internet IP'
客户端版本: 'Client Version'
客户端上一次检测时间: 'Client last detection time'
客户端错误原因: 'Client Error Reason'
当前告警: 'Current Alarm'
开始时间: 'StartAt'
名称: 'Name'
监控对象: 'Instance'
状态: 'Status'
值: 'Value'
查看图表: 'view a chart'
监控指标采集: 'Collection of monitoring indicators'
进程: 'Process'
端口: 'Port'
编号: 'ID'
分类: 'Classify'
内容: 'Content'
匹配: 'matching'
编辑者: 'Editor'
编辑时间: 'Edit Time'
添加监控策略: 'Add Monitoring Policy'
通过模版添加监控策略: 'Add monitoring policies through templates'
保存为模板: 'Save as Template'
复制其他服务树节点策略: 'Copy other service tree node policies'
清空节点策略: 'Clear policy'
监控策略: 'Monitoring strategy'
表达式: 'Expression'
告警级别: 'Alarm level'
概要: 'Summary'
添加报警人: 'Add Alarm Person'
添加报警组: 'Add Alarm Group'
添加轮班组: 'Add Alarm Oncall'
通知列表: 'Notification List'
删除: 'Delete'
测试消息通道: 'Test message channel'
账户名: 'Account Name'
创建人: 'Created by'
创建时间: 'Creation time'
监控组成员: 'Members of monitoring group'
描述: 'Describe'
编辑监控报警组成员: 'Edit Monitoring Alarm Group Members'
添加报警人: 'Add Alarm Member'
成员: 'Member'
取消: 'Cancel'
监控报警组: 'Monitoring Alarm Group'
确认: 'Confirm'
添加: 'Add'
编辑: 'Edit'
添加告警接收组: 'Add alarm receiving group'
添加告警值班组: 'Add alarm oncall'
值班表管理: 'Oncall management'
值班组: 'Oncall'
值班表: 'Oncall Table'
关闭: 'Close'
值班组日历: 'Oncall calendar'
一级告警: 'Level 1 alarm'
二级告警: 'Level 2 alarm'
三级告警: 'Level 3 alarm'
四级告警: 'Level 4 alarm'
标签: 'Tag'
数据最近更新时间: 'Data latest update time'
数据: 'Data'
告警情况: 'Alarm outline'
告警级别: 'Alarm level'
告警实例: 'Alarm instance'
告警名称: 'Alarm name'
详情: 'Details'
时间: 'Time'
服务树ID: 'TreeID'
利用率低: 'Low utilization'
警告: 'Warn'
正常: 'Normal'
未知: 'Unkown'
资源利用率低: 'Low resource utilization'
资源类型: 'Resource Type'
低利用率天数/14天: 'Low utilization days/14 days'
内存(%): 'Memory(%)'
下载带宽: 'Download bandwidth'
上传带宽: 'Upload bandwidth'
最后统计日期: 'Last statistical date'
监控邮件列表: 'Monitor mailing list'
邮件历史: 'Mail History'
账号: 'Account'
日期: 'Date'
级别: 'Level'
已节省人力: 'Labor saved'
小时: 'hour'
已执行的自愈任务: 'Self healing tasks performed'
查看作业: 'View Job'
添加自愈套餐: 'Add self-healing package'
自愈套餐配置: 'Self healing package configuration'
作业执行状态: 'Job execution status'
自愈状态: 'Self-healing state'
自愈套餐名称: 'Self healing package name'
自愈套餐: 'Self healing package'
作用IP: 'Affect IP'
自愈作业: 'Self healing job'
查找流水线: 'Find flow'
新建空白流水线: 'New Blank flow'
通过模版建流水线: 'Build flow through template'
本节点流水线数量: 'Number of flow in this treenode'
审计: 'Audit'
别名: 'Alias'
命名空间: 'Namespace'
应用: 'Application'
构建状态: 'CI status'
测试环境状态: 'Test environment status'
线上环境状态: 'Online environment status'
我可见的流水线: 'Flow visible to me'
是: 'Yes'
否: 'No'
服务树名称: 'TreeName'
代码仓库地址: 'Code Warehouse Address'
创建空白流水线: 'Create blank flow'
流水线名称: 'Flow name'
通过模版创建流水线: 'Create flow through template'
TAG发现: 'tag version'
展示历史版本: 'show history version'
线上环境发布新版本: 'Deploy online environment'
测试环境发布新版本: 'Deploy test environment'
最后一次发布成功的版本为: 'The last successful version'
查看: 'Show'
tag发现时间: 'Tag discovery time'
触发人: 'Tagger'
发布测试环境: 'Deploy test environment'
机器(发布中/线上): 'machine(Deploying/Online)'
发布线上环境: 'Deploy online environment'
耗时: 'Use time'
构建: 'Build'
停止: 'Stop'
调试: 'Debug'
回滚未配置: 'Rollback not configured'
回滚版本: 'Rollback Version'
已选择不回滚: 'No rollback selected'
回滚: 'Rollback'
发布: 'Deploy'
开关: 'Switch'
审计范围内: 'Within audit'
定时发现tags: 'Auto find tags'
自动构建: 'Auto Build'
代码地址: 'Code Address'
tag正则: 'Tag regular expression'
代码仓库凭据: 'Code Credentials'
依赖: 'rely on'
编辑依赖: 'Edit Dependencies'
密码: 'Password'
匹配分支: 'Match Branch'
回调地址: 'callback url'
build镜像: 'Build Image'
缓存目录: 'Cache directory'
构建过程中需要缓存的目录,目录相对路径为/build/data: 'The directory to be cached during construction. The relative path of the directory is/build/data'
如nodejs项目构建时可以写“node_modules”,构建时容器中会映射目录/build/data/node_modules: 'For example, "node_modules" can be written when the nodejs project is built, and the container will map the directory /build/data/node_modules'
构建脚本: 'Build Scripts'
构建时候执行的脚本.将构建成功后的文件移动到打包目录内.脚本运行结束后dist目录存在即算构建成功: 'The script that is executed during the build. Move the files that are successfully built to the packaging directory. After the script runs, the dist directory exists, which means the build is successful'
当前脚本:/build/run.项目路径:/build/data.打包目录:/build/dist: 'Current script:/build/run. Project path:/build/data. Packaging directory:/build/dist'
发布类型配置: 'Deploy Type Configuration'
通用发布: 'General'
触发脚本: 'Trigger Script'
脚本凭据: 'Script credentials'
k8s集群: 'k8s Cluster'
搜索: 'Search'
不搜索: 'Not Search'
添加: 'Add'
创建: 'Create'
应用名称: 'apply name'
多应用: 'Multi application'
并发数: 'Concurrency number'
和应用名称同名(系统内置): 'Same name as application name (built-in)'
dockerfile路径: 'Dockerfile path'
切换: 'switch'
dockerfile内容: 'Dockerfile content'
镜像凭据: 'Image credentials'
镜像类型: 'Image Type'
不构建上传镜像: 'Do not build and upload images'
自定义: 'custom'
镜像地址: 'Image Address'
提取: 'extract'
发布审批人: 'Deploy Approver'
自定义发布过程: 'Customize deploy Process'
消息通知人: 'Message Recipients'
资源限制: 'Resource limit'
核: 'core'
内存: 'Memory'
兆: 'M'
高级设置: 'advanced setting'
构建保存成目录: 'Build saved as directory'
当前选择为保存成目录: 'The current selection is Save as Directory'
保存成tar包【常规】: 'Save as tar package [General]'
git使用缓存目录: 'The cache directory used by git'
当前选择为使用缓存目录: 'The current selection is to use the cache directory'
当前选择为不使用缓存目录【常规】: 'The current selection is not to use the cache directory [General]'
构建不发邮件: 'Build No Email'
当前选择为不发邮件: 'The current selection is not to send mail'
当前选择为发送邮件【常规】: 'The current selection is Send Email [General]'
构建不发短信: 'Build no SMS'
当前选择为不发短信: 'No SMS is currently selected'
当前选择为发送短信【常规】: 'The current selection is to send SMS [General]'
发布配置: 'Deploy Configuration'
自动触发线上发布: 'Automatically trigger online environment deploying'
自动触发测试发布: 'Automatically trigger test environment deploying'
测试分组: 'Test environment group'
构建后自动触发发布: 'Automatically trigger deploying after building'
分组: 'Group'
台机器: 'machines'
检查机器状态: ''
线上分组: 'Online environment group'
构建后自动触发发布: ''
作业步骤: 'Job Step'
仅第一组: 'First batch only'
仅最后一组: 'Last batch only'
仅测试: 'Test environment only'
仅线上: 'Online environment only'
仅发布: 'Deploy only'
仅回滚: 'Rollback only'
暂停检查: 'Pause Inspection'
保存: 'Save'
步骤: 'Step'
选择服务器: 'Select Server Node'
分组名称: 'Group Name'
备注: 'Remarks'
分组类型: 'Group Type'
机器列表: 'Node List'
百分比: 'percentage'
选择机器: 'Select Node'
可以选择，也可以手动输入: 'It can be selected or manually entered'
选择服务器分批: 'Select Server Batching'
输入机器IP: 'Enter the machine IP'
机器列表,用逗号分隔，不同的分批用分号或者换行分隔: 'The machine list is separated by commas, and different batches are separated by semicolons or newlines'
例如: 'for example'
比例输入: 'Input'
本节点的百分比用冒号分割数字或者百分比: 'The percentage of this node is divided into numbers or percentages by colons'
扩展的百分比.每一行是一个大分组；每一行由3段信息组成，用分号分隔（子树id［如：123 、 234 、空字符］，用英文逗号分隔; 机器编号范围［用逗号分隔，用～号标示范围］；百分比，和第一组类型一样: 'Percentage of expansion Each row is a large group; Each line consists of three pieces of information, separated by semicolons (subtree id [such as 123, 234, null characters], separated by English commas; machine number range [separated by commas, marked by ～]; percentage, same as the first group of types'
服务器信息: 'server information'
名称: 'Name'
类型: 'Type'
删除并退出: 'Delete and Exit'
通过IP选择服务器: 'Select Server via IP'
分组选择: 'Group Selection'
选择变量: 'Select Variable'
手写IP: 'Handwritten IP'
名称: 'Name'
插件: 'plug-in'
手写IP，可写多个IP。: 'Handwritten IP, multiple IP can be written.'
分隔符：换行符、逗号、空格: 'Separator: line break, comma, space'
全局变量参数: 'Global variable parameters'
变量名称: 'Variable name'
变量默认值: 'Variable Defaults'
变量描述: 'Variable Description'
选项: 'Option'
删除: 'Delete'
作业步骤: 'Job Step'
添加脚本步骤: 'Add script step'
添加分发文件步骤: 'Add a distribution file step'
添加审批步骤: 'Add approval step'
添加kubernetes发布步骤: 'Add kubernetes deploy step'
步骤: 'Step'
脚本: 'Script'
文件: 'File'
审批: 'Approval'
脚本作业: 'Script Job'
作业名称: 'Job Name'
执行账户: 'Execution account'
服务器类型: 'Server Type'
脚本参数: 'Script Parameters'
复制: 'Copy'
文件作业: 'File Job'
审批作业: 'Approval Job'
审批内容: 'Approval content'
审批人: 'Approver'
新建脚本步骤: 'New Script Step'
不少于2字符: 'Not less than 2 characters'
脚本来源: 'Script Source'
手工录入: 'Manual entry'
脚本克隆: 'Script Clone'
本地脚本: 'Local Script'
脚本内容: 'Script content'
自动识别: 'automatic recognition'
内建插件: 'Built in plug-in'
内建: 'Built in'
使用凭据: 'Use credentials'
目标机器: 'Target machine'
选择服务器: 'Select Server'
脚本参数: 'Script Parameters'
超时时间: 'Timeout'
结束是否暂停: 'Whether to pause at the end'
生效环境: 'Effective environment'
总是执行: 'Always execute'
测试环境: 'Test environment'
线上环境: 'Online environment'
生效动作: 'Effective action'
仅发布时执行: 'Execute only when deploy'
仅回滚时执行: 'Execute only when rollback'
分批: 'batch'
仅第一个分组: 'First group only'
仅最后一个分组: 'Last group only'
新建分发文件步骤: 'New Distribution File Steps'
作业名称: 'Job Name'
输入作业名称: 'Enter Job Name'
源文件: 'source file'
注意：本地文件上传会有同名文件覆盖危险: 'Note: Uploading local files will cause the danger of overwriting files with the same name'
选择共享文件: 'Select a shared file'
选择源服务器文件: 'Select Source Server File'
选择构建文件: 'Select Build File'
文件列表: 'File List'
服务器地址: 'server address'
执行账户: 'Execution account'
构建ID(流水线ID): 'Build ID (flow ID)'
版本: 'Version'
默认空: 'Default empty'
必选源服务器: 'Required Source Server'
目标文件: 'Target File'
目标路径: 'Target Directory'
输入目标文件路径: 'Enter the target file path'
同步delete: 'Synchronize delete'
必选执行用户: 'Required Execution User'
目标机器: 'Target machine'
选择服务器: 'Select Server'
必须目标服务器: 'Must target server'
必选文件所有者: 'Required File Owner'
文件归属者: 'Document Owner'
文件权限: 'File authorization'
输入目标文件权限: 'Enter Target File Permissions'
超时时间必填: 'Timeout is required'
构建文件: 'CI file'
服务器文件: 'Server files'
上传文件: 'Upload files'
选择文件: 'Select File'
手动输入: 'Manual input'
文件名称: 'File Name'
文件名: 'FileName'
大小: 'Size'
创建用户: 'Create User'
创建时间: 'Create Time'
修改用户: 'Edit User'
修改时间: 'Edit Time'
token管理: 'Token manage'
新建审批步骤: 'New Approval Step'
所有审批人都要审批: 'All approvers need to approve'
只要一个人审批: 'Only one person should approve'
策略: 'strategy'
提交人和审批人为同一个人是跳过审批: 'If the submitter and approver are the same person, the approval will be skipped'
如果提交人和审批人为同一个人，可能会升级到上一级领导审批: 'If the submitter and the approver are the same person, they may be upgraded to a higher level leader for approval'
必须审批人审批: 'Must be approved by the approver'
作业: 'Job'
分组: 'Group'
加载中: 'Loading'
过滤: 'Filter'
选择: 'Select'
脚本名称: 'Script Name'
不少于2字符: 'Not less than 2 characters'
脚本来源: 'Script Source'
手工录入: 'Manual entry'
脚本克隆: 'Script Clone'
本地脚本: 'Local script'
脚本内容: 'Script content'
添加用户: 'Add User'
做chown操作，为空的情况下文件最后的归属着和Agent的启动用户有关。: 'The chown operation is performed. If it is empty, the final ownership of the file is related to the startup user of the agent'
做chmod操作，为空的情况下文件权限和系统设置有关。: 'When chmod is empty, file permissions are related to system settings.'
执行: 'Execute'
总数: 'Total'
开始操作: 'Start operation'
清除: 'Clear'
全选: 'Select All'
请点击选择节点: 'Please click to select a node'
文件管理: 'File management'
地址: 'Address'
手动输入查询: 'Enter query manually'
打开主机终端: 'Open the host terminal'
今日任务: "Today's Task"
耗时(秒): 'Time taken (seconds)'
主机: 'Host'
信息: 'Information'
路径: 'Path'
操作人: 'Operator'
查询条件: 'query criteria'
我: 'Me'
最后修改人: 'Last modified user'
修改时间: 'Edit Time'
查询: 'Search'
新建作业: 'New Job'
作业列表: 'Job List'
克隆: 'Clone'
关联流水线: 'Associated flow'
变量: 'Variable'
最后修改时间: 'Last modified time'
填写空变量: 'Fill in blank variables'
变量名: 'Variable name'
创建作业: 'Create Job'
全局变量设置: 'Global variable settings'
全局变量参数: 'Global variable parameters'
变量默认值: 'Variable Defaults'
变量描述: 'Variable Description'
立即执行: 'Execute immediately'
保存作业: 'Save Job'
编辑作业: 'Edit Job'
克隆作业: 'Clone Job'
克隆至目标节点: 'Clone to target tree'
克隆节点: 'Clone Node'
获取更新链接: 'Get Update Link'
克隆作业: 'Clone Job'
账户名称: 'Account name'
账户信息: 'Account information'
下载: 'Download'
编辑人: 'Editor'
新建脚本: 'New Script'
关联作业: 'Associated Job'
脚本信息: 'Script Information'
分组信息: 'Group information'
插件名称: 'Plugin Name'
新建分组: 'New Group'
新建分批: 'New Batch'
分批列表: 'Batch List'
机器列表: 'Node List'
分组机器列表: 'Group Machine List'
机器名: 'Hostname'
添加机器: 'Add Node'
通知人名称: 'Receiver'
添加报警人: 'Add receiver'
通知用户: 'Add User'
创建定时任务: 'Create a scheduled task'
定时任务: 'Scheduled Tasks'
开始: 'Start'
修改: 'Modify'
规则: 'Rule'
互斥锁: 'Mutex lock'
修改记录: 'Edit Record'
状态自动监测更新: ''
保存新状态: 'Automatic status monitoring update'
安装代理: 'Install Proxy'
安装AGENT: 'Install Agent'
指定AGENT启动用户: 'Specify the AGENT startup user'
强制重装: 'Forced reinstall'
卸载命令【目录删除后AGENT会自动退出】: 'Uninstall command [AGENT will exit automatically after directory deletion]'
代理接口: 'Proxy interface'
安装: 'Install'
部署windowns_exporter服务(window系统): 'Deploy windowns_exporter service (window system)'
一、下载最新版: '1、 Download the latest version'
二、安装（默认端口9128，这里可以通过此方法在安装的时候指定端口）: '2、 Installation (default port 9128, which can be specified during installation)'
三、验证服务: '3、 check service status'
检查65110端口是否启动: 'Check whether the 65110 port is started'
查看服务名为windowns_exporter的服务是否启动: 'Check whether the service named xxx is started'
浏览器访问测试一下: 'Browser access test'
正常: 'Normal'
异常: 'Abnormal'
区域: 'Region'
代理: 'Proxy'
网段: 'Network'
失败次数: 'Failures count'
理由: 'Reason'
服务树: 'tree'
导入代理: 'Import Proxy'
选中: 'Selected'
添加网段: 'Add network'
自定义一个区域: 'Customize a region'
变量信息: 'Variable information'
最后编辑人: 'Last Editor'
最后更新时间: 'Last updated'
刷新: 'Refresh'
服务: 'Service'
集群: 'Cluster'
关联服务树: 'Associated Service Tree'
集群授权: 'Cluster authorization'
集群备份: 'Cluster backup'
速度快: 'Fast'
功能多: 'More features'
显示全部: 'Show All'
发布流水线: 'Flow'
连接测试: 'Connection test'
修改集群: 'Modify Cluster'
通过yaml创建: 'Created by yaml'
全部: 'All'
添加授权: 'Add Authorization'
读权限: 'Read permission'
用户名称: 'UserName'
权限: 'Permission'
'[读+执行]权限(执行权限可以进入pod的shell)': '[Read+Execute] permission (the execution permission can enter the pod shell)'
'[读+写+执行]权限': '[Read+Write+Execute] Permission'
确认添加: 'Confirm Add'
读权限: 'Read permission'
授权: 'Authorization'
'[读+执行]权限': '[Read+Execute] Permission'
'[读+写+执行]权限': '[Read+Write+Execute] Permission'
仅个人可见: 'Only visible to individuals'
读写共享给组内人员: 'Read and write shared to people in my organization'
高级共享配置: 'Advanced Sharing Configuration'
凭据自身编辑权授权: 'Credential self editing authorization'
共享组: 'Shared Group'
读写权限: 'read-write permission'
只读权限: 'Read-only permission'
用户共享: 'User sharing'
插件: 'Plugin'
镜像仓库: 'Image Hub'
适用于: 'For'
用户名: 'Username'
密码: 'Password'
内容: 'Content'
适用于作业内建插件或者构建触发脚本: 'Applicable to job built-in plug-ins or CI trigger scripts'
有写权限才能进入: 'You can only enter with write permission'
宽松的,有读权限即可进入: 'Relaxed, you can enter with read permission'
默认版本: 'Default Version'
云厂商: 'Cloud vendors'
腾讯云: 'QCloud'
网络代理: 'Network Proxy'
代理安装方式: 'Proxy installation by'
内容: 'Content'
文件内容: 'File Content'
服务地址: 'Service Address'
用户名: 'Username'
密码: 'Password'
保存凭据: 'Save credentials'
集群节点管理: 'Cluster node management'
执行驱逐操作: 'Execute cordon operation'
设置成可调度: 'Set as schedulable'
设置成不可调度: 'Set as non schedulable'
角色: 'Role'
操作系统: 'Operating System (OS)'
内核版本: 'Kernel version'
容器运行时: 'Container runtime'
调度设置: 'Scheduling Settings'
驱逐POD: 'Cordon'
污点: 'Taint'
节点污点(Taint)管理: 'Node Taint Management'
设置污点: 'Set Taint'
从Harbor凭据中获取信息: 'Get information from Harbor credentials'
操作协助: 'Operation assistance'
邮箱: 'Email'
下一步: 'Next step'
导入: 'Import'
标签: 'Label'
数据: 'Data'
返回上一步: 'Back'
提交变更: 'Submit changes'
文本替换: 'Text Replacement'
操作权限: 'Operation authority'
配置项: 'Configuration Item'
备份: 'Backup'
点击立即备份: 'Click Backup Now'
集群管理员: 'Cluster Administrator'
普通用户: 'Ordinary users'
全量下载: 'Full download'
应用下载: 'Application Download'
例子: 'Example'
创建流水线: 'Create Flow'
模版: 'Template'
容器: 'Container'
镜像: 'Image'
流水线名称: 'Flow Name'
创建: 'Create'
关联已有流水线: 'Associate existing flow'
守护进程集: 'Daemonset'
注解: 'Annotations'
停止等待时间: 'Stop waiting time'
添加数据卷: 'Add Data Volume'
清空: 'Clear'
拉取私有镜像管理: 'Pull private image management'
添加已有凭证: 'Add existing voucher'
调度: 'Scheduler'
节点亲和性调度: 'Node affinity scheduling'
POD亲和性调度: 'POD affinity scheduling'
POD反亲和性调度: 'POD anti affinity scheduling'
容忍: 'tolerate'
不允许调度，已经调度的资源不受影响: 'Scheduling is not allowed, and the resources already scheduled will not be affected'
尽量不调度: 'Try not to dispatch'
不允许调度: 'Dispatch not allowed'
容器名称: 'Container name'
获取仓库地址: 'Get warehouse address'
镜像拉取策略: 'Image pull strategy'
若不设置镜像拉取策略，当镜像版本为空或:latest时，使用Always策略，否则使用IfNotPresent策略: 'If the image pull policy is not set, the Always policy is used when the image version is empty or: latest. Otherwise, the IfNotPresent policy is used'
限制: 'Limit'
Request用于预分配资源，当集群中的节点没有request所要求的资源数量时，容器会创建失败。Limit用于设置容器使用的最大上限，避免异常情况下节点资源消耗过多。: 'Request is used to pre allocate resources. When a node in the cluster does not have the number of resources required by request, the container will fail to be created. Limit is used to set the maximum upper limit of container usage to avoid excessive node resource consumption under abnormal conditions.'
CPU的单位是核心数，内存的单位是字节。: 'The unit of CPU is the number of cores, and the unit of memory is bytes.'
CPU单位：m 或者 不需要单位: 'CPU unit: m or no unit required'
CPU的单位是核心数，内存的单位是字节。: 'The unit of CPU is the number of cores, and the unit of memory is bytes.'
CPU单位：m 或者 不需要单位: 'CPU unit: m or no unit required'
一个容器申请0.5个CPU，就相当于申请1个CPU的一半，可以加个后缀m表示千分之一的概念。比如说100m的CPU，100毫的CPU等同于0.1: 'A container applying for 0.5 CPU is equivalent to applying for half of 1 CPU. You can add a suffix m to represent the concept of one thousandth. For example, a 100m CPU is equivalent to 0.1'
单位: 'Unit'
通常是以1000为换算标准的。: 'Usually, 1000 is the conversion standard.'
通常是以1024为换算标准的。: 'Usually 1024 is used as the conversion standard.'
启动命令: 'Start command'
命令参数: 'Command parameters'
环境变量: 'environment variable'
普通变量: 'Common variable'
变量: 'Variable'
未知变量类型: 'Unknown variable type'
设置: 'Set'
未知类型: 'Unknown type'
卷挂载点: 'Volume mount point'
目录: 'directory'
单个文件: 'Single file'
应用存活探针: 'Apply survival probe'
命令行方式: 'Command line mode'
请求方式: 'Request mode'
首次探测时间/秒: 'First detection time/s'
探测间隔时间/秒: 'Detection interval time/s'
探测超时时间/秒: 'Probe timeout/sec'
命令行: 'command line'
应用就绪探针: 'Application Ready Probe'
命令行方式: 'Command line mode'
无状态应用: 'Deployment'
副本数量: 'Number of copies'
滚动升级策略: 'Rolling upgrade strategy'
高级调度设置: 'Advanced scheduling settings'
开放端口: 'Open port'
当前为不创建: 'Currently not created'
当前为需要创建: 'Currently required to create'
阈值: 'Threshold'
副本数: 'Number of copies'
新版本: 'New Version'
旧版: 'Old Version'
规则: 'Rule'
证书: 'Certificate'
协议: 'Protocol'
新容器: 'New Container'
旧容器: 'Old Container'
路径类型: 'Path Type'
镜像仓库选择: 'Image warehouse selection'
集群和服务树节点关联: 'Cluster and service tree node association'
流水线自动关联: 'Automatic flow association'
手动关联服务树: 'Manually associate the service tree'
所有集群: 'All clusters'
汇总: 'Summary'
集群名称: 'Cluster Name'
错误: 'Error'
升级: 'Upgrade'
手动扩缩容: 'Manual expansion and contraction'
任务名称: 'Task Name'
任务状态: 'Task Status'
任务: 'Task'
是回滚流程: 'Is a rollback process'
结束时间: 'Finish Time'
启动方式: 'Start Way'
执行详情: 'Details'
点击返回流水线: 'Click to return to the flow page'
终止任务: 'Stop Task'
紧急回滚: 'Emergency rollback'
回滚: 'Rollback'
不回滚: 'NotRollback'
已过期不可回滚: 'Expired and cannot be rollback'
发布任务: 'DeployTask'
启动人: 'Operator'
忽略错误: 'Ignore errors'
执行确认: 'Execution confirmation'
重试: 'Retry'
忽略: 'Ignore'
终止: 'Stop'
回滚任务: 'Task Rollback'
任务执行日志: 'Task Execution Log'
日志详情: 'Log Details'
任务类型: 'Task Type'
基本信息: 'Basic information'
执行结果: 'Results of execution'
任务日志: 'Task Log'
调用变量: 'Call variable'
作业步骤: 'Job Step'
脚本作业: 'Script Job'
作业名称: 'Job Name'
执行主机数: 'Number of execution hosts'
作业日志: 'Job Log'
执行时间: 'Execution time'
重做: 'Redo'
执行节点: 'Execution Node'
执行命令: 'Execution Command'
命令执行日志: 'Command Execution Log'
用户数: 'User Count'
添加行数: 'Add Rows'
删除行数: 'Deleted rows'
提交次数: 'Commit Count'
数据最近更新时间: 'Data latest update time'
项目: 'Project'
代码行数增删情况: 'Addition and deletion of code lines'
代码行数增删情况: ''
代码行数增删情况: ''
提交行数: 'Commit lines'
提交时间: 'Commit time'
提交编号: 'Commit id'
有效提交: 'Valid commit'
提交人: 'submitter'
提交地址: 'Address'
打包次数: 'CI Count'
测试环境发布: 'Test environment Deploy'
发版次数: 'Deploy Count'
回滚次数: 'Rollback Count'
趋势图: 'Trend Chart'
服务树编号: 'Tree ID'
流水线编号: 'Flow ID'
发布地址: 'Flow Address'
通知出口开关设置: 'Notification switch setting'
邮件: 'Email'
短信: 'Sms'
语音: 'Voice'
页面执行作业: 'Page Execution Job'
执行成功: 'Execution succeeded'
执行失败: 'Execution failed'
等待用户: 'Waiting for users'
分组启动作业: 'Group Job'
定时启动作业: 'Crontab Job'
构建任务: 'CI Task'
发布任务: 'Flow Task'
审批: 'Approval'
审批事件: 'Approval event'
监控系统: 'monitoring system'
告警通知: 'Alarm notification'
邮件内容监控: 'Email content monitoring'
作业任务通知模版: 'Job task notification template'
邮件模板: 'Email Template'
邮件标题: 'Email Title'
邮件内容: 'Email Content'
短信模板: 'Sms Template'
短信内容: 'Sms Content'
构建通知模版: 'CI Build notification template'
发布通知模版: 'Deploy notification template'
审批通知模版: 'Approval notification template'
监控系统告警通知模版: 'Monitoring system alarm notification template'
语音模板: 'Voice template'
语音内容: 'Voice Content'
监控系统邮件内容监控通知模版: 'Monitoring system email content monitoring notification template'
系统参数管理: 'System parameter management'
持续构建: 'continuous build'
自动构建: 'auto build'
默认是1。如果是0时，发现的tag都不进行自动构建。: 'The default is 1. If it is 0, the tags will not be automatically findtag.'
默认: 'Default'
间隔: 'Interval'
秒: 'Second'
当时间间隔为0时表示不开启该服务: 'When the time interval is 0, the service will not be started'
单个构建默认CPU限制(核): 'Default CPU limit for single build (core)'
最多使用的cpu核数，可以是小数，如 1.5 : 'The maximum cpu cores used to CI build, such as 1.5'
单个构建默认内存限制: 'Default memory limit for a single build'
单个构建中最多使用的内存,单位是兆: 'The most memory used in a single build, in megabytes'
可以分配给构建任务的所有内存: 'All memory that can be allocated to the build task'
内存会被分配给任务，内存不够分配时，构建任务会排队等待: 'Memory will be allocated to tasks. When memory is insufficient for allocation, construction tasks will queue up'
流水线默认显示版本数量: 'Number of versions displayed by flow by default'
需要reload服务后生效: 'Takes effect after reload service is required'
上传: 'Upload'
地址: 'Address'
QA系统联动: 'QA system linkage'
回调: 'Callback'
返回结果匹配内容: 'Return result matching content'
集群设置: 'Cluster Settings'
列表: 'List'
登录: 'Login'
登录验证方式: 'Login authentication method'
主机名: 'Hostname'
用户: 'User'
基础: 'Base'
组角色: 'Group Role'
管理员: 'Administrators'
运维: 'O&M'
研发: 'R&D'
保留先验证本地用户: 'Keep authenticating local users first'
连接器缓存: 'Connector Cache'
缓存超时: 'Cache Timeout'
监控模式: 'Monitor model'
主机: 'Host'
使用公网IP监控的网段: 'Network segment monitored using public IP'
对象存储类型: 'Object Storage Type'
监控代理: 'Monitor Proxy'
代理服务树节点: 'Proxy Service Tree ID'
指定服务树中某个节点作为数据库监控的代理配置: 'Specify a node in the service tree as the agent configuration for database monitoring'
同步: 'Synchronization'
同步间隔: 'Synchronization Interval'
导入服务树结构: 'Import Service Tree Structure'
导入服务树绑定关系: 'Import Service Tree Binding Relationship'
摄取: 'Ingestion'
主机摄取: 'Ingestion Node'
严格: 'strict'
默认是0。只读权限即可以访问; 是1时，运维可以访问本服务树节点，管理员可以访问全局。: 'The default is 0. Read only permission can be accessed; When it is 1, the O&M can access this service tree node, and the administrator can access the global.'
产品负责人: 'Product Owner'
运维负责人: 'O&M owner'
所属部门: 'Department'
资源名称: 'Resource Name'
系统监控信息: 'System monitoring information'
监控指标: 'Monitoring indicators'
时间: 'Time'
审计日志: 'Audit Log'
具体内容: 'Content Detail'
可见度: 'Visibility'
存放位置: 'Storage location'
本服务树: 'This Service Tree'
全局可见: 'Globally visible'
全部导入: 'Import All'
用户地址簿管理: 'User Address Book Management'
添加通信地址: 'Add user address'
地址簿: 'Address Book'
邮箱地址: 'e-mail address'
手机号: 'phone number'
语音信箱: 'Voice mailbox'
更新时间: 'Update time'
添加用户地址簿: 'Add User Address Book'
撤销: 'Revoke'
分钟: 'Minute'
过期时间: 'Expiration time'
作用对象: 'Target'
解除继承的列表: 'Uninherited List'
用户部门关系绑定: 'User department relation binding'
添加用户部门关联: 'Add user department association'
用户部门关联关系: 'User department association'
部门: 'Department'
绑定用户部门关联关系: 'Bind user department association'
私有节点管理: 'Private node management'
添加用户: 'Add User'
管理机器: 'Manage machines'
任务监视器: 'Task Monitor'
内存使用: 'Memory usage'
剩余: 'surplus'
队列: 'queue'
正在运行: 'Running'
流水线ID: 'Flow ID'
TAG版本: 'TAG Version'
运行节点: 'task slave'
CPU限制(核): 'CPU limit(core)'
内存限制(兆): 'Memory limit(M)'
队列序号: 'Queue ID'
网络监视器: 'Network watcher'
代理网络: 'Proxy Network'
流水线网络: 'Flow Network'
流水线ID: 'Flow ID'
检测时间: 'Detection time'
测试环境节点: 'Test environment node'
测试环境节点错误: 'Test environment node Error'
线上环境节点: 'Online environment node'
线上环境节点错误: 'Online environment node Error'
整个系统的审批: 'Approval of the whole system'
尚未发送: 'Not sent yet'
创建中: 'Creating'
同意: 'agree'
未审批: 'Unapproved'
拒绝: 'refuse'
审批: 'Approval'
查看: 'show more'
协助操作人: 'Assistant operator'
审批名称: 'Approval Name'
OA单号: 'OA Case ID'
通知状态: 'Notification Status'
审批状态: 'Approval Status'
云监控: 'Cloud monitoring'
配置: 'configure'




