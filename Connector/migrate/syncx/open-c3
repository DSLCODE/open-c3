#!/opt/mydan/perl/bin/perl
use strict;
use warnings;

$|++;

use JSON;
use YAML::XS;
use MYDan::Util::OptConf;
use File::Basename;

=head1 SYNOPSIS

 $0 --node 10.10.10.10

=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->get( qw( node=s ) )->dump();
        $option->assert(qw( node ));

my $node = $o{node};

delete $ENV{MYDanPATH};

my $temppath = "/data/open-c3-data/c3-migrate-temp";
mkdir $temppath unless -d $temppath;

my $succpath = "$temppath/succ";
mkdir $succpath unless -d $succpath;

sub migrate
{
    my ( $node ) = @_;
    print "#" x 70, "\n";
    my $distname = 'open-c3-code.migrate';

    my $succfile = "$succpath/sync-open-c3-code";
    if( -f $succfile )
    {
        print "skip.\n";
        return;
    }

    die "tar fail: $! "      if system "cd $temppath && tar -zcf $distname.tar.gz  /data/open-c3 2>/dev/null";
    my $x = `/opt/mydan/dan/tools/rcall --timeout 86400 --verbose -r '$node' dump /data/open-c3-data/c3-migrate-temp/$distname.tar.gz`;
    die "call $node fail" if $?;
    ( $x && $x =~ /:ok/ ) ? print "ump success\n" : die "dump fail: $x";

    $x = `/opt/mydan/dan/tools/rcall --timeout 86400 --verbose -r '$node' exec 'tar -zxf /data/open-c3-data/c3-migrate-temp/$distname.tar.gz -C / && echo success' 2>&1`;
    die "call $node fail" if $?;
    ( $x && $x =~ /success/ ) ? print "untar success\n" : die "untar fail: $x";
    die "unlink fail: $!" if system "rm /data/open-c3-data/c3-migrate-temp/$distname.tar.gz";
    die "touch $succfile fail: $!" if system "touch '$succfile'";
}

migrate( $node );

print "open-c3 sync done.\n";
