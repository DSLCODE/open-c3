#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess
import random
import time
from botocore.exceptions import ClientError

import boto3

sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_utils import check_if_params_safe_in_recycle
from c3mc_cloud_aws_ec2 import LIB_EC2


def exponential_backoff(attempt, max_delay):
    delay = min(max_delay, (2**attempt) + random.uniform(0, 1))
    time.sleep(delay)


class Ec2Recycle:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.lib_ec2 = LIB_EC2(self.access_id, self.access_key, self.region)

    def run(self, instance_id):
        self.lib_ec2.delete_ec2([instance_id])


def get_instance_uuid(instance_maybe_identifier):
    command = f"c3mc-device-find-uuid {instance_maybe_identifier}"
    result = subprocess.check_output(command, shell=True)
    parts = result.decode("utf-8").strip().split()
    if len(parts) > 1:
        print(f"通过命令 {command} 查询到了多个uuid {parts}", file=sys.stderr)
        exit(1)
    return parts[0]


def main(params):
    print("params = ", json.dumps(params))

    field_name_list = subprocess.getoutput(
        "c3mc-cloud-get-real-field compute aws-ec2 InstanceId account RegionId"
    ).split()

    instance_identifier_list = params["instance_ids"].split(",")
    check_if_params_safe_in_recycle(
        instance_identifier_list, params["bpm_uuid"], "aws-ec2-recycle"
    )

    for instance_identifier in instance_identifier_list:
        instance_identifier = instance_identifier.strip()
        if instance_identifier == "":
            continue

        instance_real_uuid = get_instance_uuid(instance_identifier)
        resource_info = json.loads(
            subprocess.getoutput(
                f"c3mc-device-cat curr compute aws-ec2 {instance_real_uuid} | c3mc-base-tab2json"
            )
        )

        key_info = json.loads(
            subprocess.getoutput(
                f"c3mc-get-account-info aws {resource_info[field_name_list[1]]}"
            )
        )

        Ec2Recycle(
            key_info["access_id"],
            key_info["access_key"],
            resource_info[field_name_list[2]],
        ).run(resource_info[field_name_list[0]])


if __name__ == "__main__":
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise type("WrongInputData", (Exception,), {})('数据格式不对, 需要一行json字符串"')

    main(json.loads(l[0]))
