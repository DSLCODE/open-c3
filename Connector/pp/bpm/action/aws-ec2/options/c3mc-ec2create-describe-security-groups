#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

import boto3


def describe_security_groups(access_id, access_key, region, vpc_id):
    """
        查询安全组列表
    """
    client = boto3.client(
        "ec2",
        aws_access_key_id=access_id,
        aws_secret_access_key=access_key,
        region_name=region,
    )

    result = []

    page_size = 1000
    filters=[
        {
            'Name': 'vpc-id',
            'Values': [
                vpc_id,
            ]
        },
    ]
    response = client.describe_security_groups(Filters=filters, MaxResults=page_size)
    result.extend(response["SecurityGroups"])
    marker = response["NextToken"] if "NextToken" in response else ""
    while marker != "":
        response = client.describe_security_groups(
            Filters=filters, MaxResults=page_size, NextToken=marker)
        result.extend(response["SecurityGroups"])

        marker = response["NextToken"] if "NextToken" in response else ""
    return result


def main(params):
    account = params["account"]
    region = params["region"]
    vpc_id = params["vpc_id"]

    key_info = json.loads(
        subprocess.getoutput(f"c3mc-get-account-info aws {account}")
    )

    security_groups_list = describe_security_groups(
        key_info["access_id"], key_info["access_key"], region, vpc_id)

    security_groups_list = sorted(security_groups_list, key=lambda x: (x['GroupName']), reverse=False)

    for security_group in security_groups_list:
        print(json.dumps(security_group, default=str))


if __name__ == '__main__':
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise type('WrongInputData', (Exception,), {})('数据格式不对, 需要一行json字符串"')

    main(json.loads(l[0]))
