#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess


sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_cloud_aws_elbv2 import ELBV2
from c3mc_utils import check_if_params_safe_in_recycle


class NlbRecycle:
    def __init__(self, access_id, access_key, region):
        self.lib_client = ELBV2(access_id, access_key, region)

    def run(self, load_balancer_arn):
        lb_info = self.lib_client.show_lb_info(load_balancer_arn)
        if not lb_info:
            print(f"无法查到lb {load_balancer_arn} 的详情, 跳过删除该lb")
            return

        resp = self.lib_client.delete_load_balancer(load_balancer_arn)
        print(f"删除lb {load_balancer_arn}, 响应: {json.dumps(resp)}\n")


def get_instance_uuid(instance_maybe_identifier):
    command = f"c3mc-device-find-uuid {instance_maybe_identifier}"
    result = subprocess.check_output(command, shell=True)
    parts = result.decode("utf-8").strip().split()
    if len(parts) > 1:
        print(f"通过命令 {command} 查询到了多个uuid {parts}", file=sys.stderr)
        exit(1)
    return parts[0]


def main(params):
    print("params = ", json.dumps(params))

    field_name_list = subprocess.getoutput(
        "c3mc-cloud-get-real-field networking aws-nlb LoadBalancerName account RegionId LoadBalancerArn"
    ).split()

    instance_identifier_list = params["instance_ids"].split(",")
    check_if_params_safe_in_recycle(
        instance_identifier_list, params["bpm_uuid"], "aws-ec2-recycle"
    )

    for instance_identifier in instance_identifier_list:
        instance_identifier = instance_identifier.strip()
        if instance_identifier == "":
            continue

        instance_real_uuid = get_instance_uuid(instance_identifier)
        resource_info = json.loads(
            subprocess.getoutput(
                f"c3mc-device-cat curr networking aws-nlb {instance_real_uuid} | c3mc-base-tab2json"
            )
        )

        key_info = json.loads(
            subprocess.getoutput(
                f"c3mc-get-account-info aws {resource_info[field_name_list[1]]}"
            )
        )

        NlbRecycle(
            key_info["access_id"],
            key_info["access_key"],
            resource_info[field_name_list[2]],
        ).run(resource_info[field_name_list[3]])


if __name__ == "__main__":
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise type("WrongInputData", (Exception,), {})('数据格式不对, 需要一行json字符串"')

    main(json.loads(l[0]))
