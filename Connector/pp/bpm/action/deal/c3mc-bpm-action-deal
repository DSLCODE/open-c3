#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/JOB/lib -I/data/Software/mydan/JOB/private/lib
use strict;
use warnings;

use YAML::XS;
use POSIX;
use uuid;
use Encode;
use JSON;
use MYDB;
use utf8;

$| ++;

local $/ = undef;
my $data = JSON::from_json( Encode::encode('utf8', <STDIN> ) );
local $/ = "\n";

die "node data" unless $data;
map { $data->{$_} = Encode::decode( 'utf8', $data->{$_} ) }keys %$data;
my ( $temp ) = @$data{qw( leader )};

my $db = MYDB->new( "/data/Software/mydan/JOB/conf/conn", delayedconnection => 1 );

my $bpmuuid = $ENV{C3BPMUUID};
die "nofind bpmuuid" unless $bpmuuid;

my $leaderwaituser;
sub leaderwait
{
    my $user = shift @_;
    return if $leaderwaituser && $leaderwaituser eq $user;

    eval{ $db->execute( "replace into openc3_job_bpm_deal (`bpmuuid`,`dealer`,`status`)values('$bpmuuid','$user','wait')" ) };
    die "replace error: $@" if $@;

    system "c3mc-bpm-user-record '$user'";
    
    print "LOG. Waiting for user $user to process\n";

    $leaderwaituser = $user;
}

while(1)
{
    my $x = `c3mc-bpm-get-var --bpmuuid '$bpmuuid' deal`;

    my $d = eval{ YAML::XS::Load $x };
    die "load deal data fail: $@" if $@;

    my $dealer = $d->{deal}{dealer};

    die "load dealer fail" unless $dealer;

    leaderwait( $dealer );

    my $stat = eval{ $db->query( "select status from openc3_job_bpm_deal where bpmuuid='$bpmuuid' and dealer='$dealer'" );};
    die "select data from db fail: $@" if $@;

    if ( @$stat && $stat->[0][0] eq 'agree' )
    {
        eval{ $db->execute( "delete from openc3_job_bpm_deal where bpmuuid='$bpmuuid'" ) };
        die "delete fail: $@" if $@;
        print "LOG. $dealer: agree\n";
        exit;
    }

    if ( @$stat && $stat->[0][0] eq 'refuse' )
    {

        my $subtaskstatus = 'refuse';
        print "LOG. $dealer: refuse\n";
        print "substatus = $subtaskstatus\n";
        print "_openc3_sys_pluginstatus_sys_openc3_:$subtaskstatus\n";
        exit;
    }

    sleep 6;
}

