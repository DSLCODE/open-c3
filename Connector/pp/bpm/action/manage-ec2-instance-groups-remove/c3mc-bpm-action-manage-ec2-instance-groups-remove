#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess


sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_parse_resource_timer_task import OperateTimeTaskFile


def get_instance_uuid(instance_maybe_identifier):
    command = f"c3mc-device-find-uuid {instance_maybe_identifier}"
    result = subprocess.check_output(command, shell=True)
    parts = result.decode("utf-8").strip().split()
    if len(parts) > 1:
        print(f"通过命令 {command} 查询到了多个uuid {parts}", file=sys.stderr)
        exit(1)
    return parts[0]


def main(params):
    print("params = ", json.dumps(params))

    action_type = params["action_type"]

    instance_identifier_list = [
        item.strip()
        for item in params["instance_ids"].split(",") if item.strip() != ""
    ]

    ot = OperateTimeTaskFile()

    for instance_identifier in instance_identifier_list:
        # 这里只判断是否可以根据用户输入的信息成功查询指定实例id
        get_instance_uuid(instance_identifier)

        try:
            ot.remove(
                action_type.strip(),
                instance_identifier.strip(),
            )
            print(f"LOG. 定时操作EC2实例删除实例: {instance_identifier}")
        except Exception as e:
            if "无法找到相关定时任务" in str(e):
                print(f"LOG. {str(e)}")
            else:
                raise e

    ot.save()


if __name__ == "__main__":
    input_list = list(sys.stdin)
    if not input_list or len(input_list) > 1:
        raise type("WrongInputData", (Exception,), {})('数据格式不对, 需要一行json字符串"')

    main(json.loads(input_list[0]))
