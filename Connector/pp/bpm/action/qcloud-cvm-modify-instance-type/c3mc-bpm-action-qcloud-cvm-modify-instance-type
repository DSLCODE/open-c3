#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess
import json

sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_cloud_qcloud_cvm import QcloudCvm


class ModifyCvm:
    def __init__(self, access_id, access_key, region):
        self.region = region
        self.lib_client = QcloudCvm(access_id, access_key, region)

    def run(self, instance_id, new_instance_type):
        instance_info = self.lib_client.show_cvm(instance_id)
        if instance_info["InstanceType"] == new_instance_type:
            return
        
        stopped_status = "STOPPED"
        running_status = "RUNNING"
        
        if instance_info["InstanceState"] != stopped_status:
            self.lib_client.stop_instances([instance_id])
            self.lib_client.wait_cvm_until_status(instance_id, stopped_status, 900)

        resp = self.lib_client.reset_instances_type([instance_id], new_instance_type)
        self.lib_client.wait_until_cvm_instance_type(instance_id, new_instance_type)
        self.lib_client.start_instances([instance_id])
        self.lib_client.wait_cvm_until_status(instance_id, running_status, 900)

        print(f"调整实例类型。接口返回结果: {json.dumps(resp)}")


def main(params):
    print("params = ", json.dumps(params), file=sys.stderr)

    if subprocess.getoutput("c3mc-sys-ctl sys.bpm.fake.run") == "1":
        # bpm虚假运行
        print("成功修改aws ec2实例类型, 响应为: xxxxxx")
        print("LOG. instance_id:xxxxxx")
        print("VAR. instance_id:xxxxxx")
        return

    account = params["account"]
    region = params["region"]
    instance_id = params["instance_id"]
    instance_type = params["instance_type"]

    key_info = json.loads(subprocess.getoutput(f"c3mc-get-account-info qcloud {account}"))

    ModifyCvm(key_info["access_id"], key_info["access_key"], region).run(
        instance_id, instance_type
    )
    print("LOG. 成功修改腾讯云 cvm 实例类型")


if __name__ == "__main__":
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise type("WrongInputData", (Exception,), {})('数据格式不对, 需要一行json字符串"')

    main(json.loads(l[0]))
