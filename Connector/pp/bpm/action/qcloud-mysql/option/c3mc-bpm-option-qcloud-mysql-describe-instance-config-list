#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import json
import sys
import subprocess


sys.path.append("/data/Software/mydan/Connector/lib/pp")


def get_data_list(access_id, access_key, region, zone, charge_type, cdb_sell_type, engine_type):
    from c3mc_cloud_qcloud_cdb import QcloudCdb

    res = QcloudCdb(access_id, access_key, region).describe_cdb_zone_config()

    config_ids = set()
    for region_item in res["DataResult"]["Regions"]:
        if region_item["Region"] != region:
            continue
        for zone_item in region_item["RegionConfig"]:
            if zone_item["Zone"] != zone:
                continue
            if charge_type not in zone_item["PayType"]:
                return []

            for sell_type_item in zone_item["SellType"]:
                if sell_type_item["TypeName"] == cdb_sell_type:
                    config_ids.update(sell_type_item["ConfigIds"])
        break

    result = []
    for config_item in res["DataResult"]["Configs"]:
        if config_item["Id"] in config_ids:
            if  config_item["EngineType"] != engine_type:
                continue
            if config_item["DeviceType"] == "UNIVERSAL":
                config_item["DeviceType"] =  "通用型"
            if config_item["DeviceType"] == "EXCLUSIVE":
                config_item["DeviceType"] = "独享型"
            if config_item["DeviceType"] == "BASIC":
                config_item["DeviceType"] = "基础版"
            if config_item["DeviceType"] == "BASIC_V2":
                config_item["DeviceType"] = "基础版V2"
            result.append(config_item)
    return sorted(result, key=lambda x: (x['DeviceType'], x['Cpu'], x['Memory']), reverse=False)


def main(params):
    """查询实例配置列表
    """
    account = params["account"]
    region = params["region"]
    zone = params["zone"]
    charge_type_str = params["charge_type"]
    instance_nodes = params["instance_nodes"]
    engine_type = params["engine_type"]

    cdb_sell_type = "Z3" if instance_nodes != "1" else "TKE"

    charge_type = "1" if charge_type_str == "按量计费" else "0"

    key_info = json.loads(
        subprocess.getoutput(f"c3mc-get-account-info qcloud {account}")
    )
    data_list = get_data_list(
        key_info["access_id"], key_info["access_key"], region, zone, charge_type, cdb_sell_type, engine_type)
    for item in data_list:
        print(json.dumps(item))


if __name__ == '__main__':
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise type('WrongInputData', (Exception,), {})('数据格式不对, 需要一行json字符串"')

    main(json.loads(l[0]))
