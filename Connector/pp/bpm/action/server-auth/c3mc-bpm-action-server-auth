#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import re
import subprocess


def extract_ips(text):
    pattern = r'\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b'

    matches = re.findall(pattern, text)

    valid_ips = []
    for ip in matches:
        octets = ip.split('.')
        if len(octets) == 4 and all(0 <= int(octet) <= 255 for octet in octets):
            valid_ips.append(ip)

    return valid_ips


def main(params):
    account = params["account"]
    email = params["email"]
    auth_type = params["auth_type"]
    ip_list = extract_ips(params["ip_list"])
    sudo_hours = int(params["sudo_hours"]) if "sudo_hours" in params else 0

    # 创建堡垒机用户
    cmd_parts = ["c3mc-bl-create-user",
                 "--username", account, "--email", email]
    output = subprocess.run(cmd_parts, capture_output=True, text=True)
    if output.returncode != 0:
        print(output.stderr, file=sys.stderr)
        exit(1)

    # 添加目标服务器的权限 
    cmd_parts = ["c3mc-device-api-jumpserver",
                 "--json", "--cache", "--ips", ",".join(ip_list)]
    output = subprocess.run(cmd_parts, capture_output=True, text=True)
    if output.returncode != 0:
        print(output.stderr, file=sys.stderr)
        exit(1)

    data_list = json.loads(output.stdout)

    for data in data_list:
        ok = False
        for ip in [data["inIP"], data["exIP"]]:
            if ip == "":
                continue
            cmd_parts = ["c3mc-bl-permission", "--add_type",
                         auth_type, "--username", account, "--email", email, "--ip", data['inIP'], "--sudo_hours", str(sudo_hours)]
            output = subprocess.run(cmd_parts, capture_output=True, text=True)
            if output.returncode != 0:
                continue
            ok = True
            print(f"LOG. 服务器 {ip} 权限申请成功")
            break
        if not ok:
            print(f"LOG. 服务器 {ip} 权限申请失败", file=sys.stderr)

    print("LOG. 权限添加结束")


if __name__ == '__main__':
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise Exception("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]))
