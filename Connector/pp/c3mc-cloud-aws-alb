#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import json

import boto3


class Alb:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.client = self.create_client()
        self.page_size = 50

    def create_client(self):
        client = boto3.client(
            "elbv2",
            aws_access_key_id=self.access_id,
            aws_secret_access_key=self.access_key,
            region_name=self.region,
        )
        return client

    def get_instances_from_response(self, response_data):
        return response_data["LoadBalancers"]

    def list_instances(self):
        response = self.client.describe_load_balancers(PageSize=self.page_size)
        results = self.get_instances_from_response(response)
        while "NextMarker" in response:
            response = self.client.describe_load_balancers(
                PageSize=self.page_size, Marker=response["NextMarker"])
            results.extend(self.get_instances_from_response(response))
        return results

    def show(self):
        instance_list = self.list_instances()
        for instance in instance_list:
            print(json.dumps(instance, default=str))


def main(access_id, access_key, region):
    Alb(access_id, access_key, region).show()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3])
