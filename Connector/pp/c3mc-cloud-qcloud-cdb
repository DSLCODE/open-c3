#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys

from tencentcloud.common import credential
from tencentcloud.common.profile.client_profile import ClientProfile
from tencentcloud.common.profile.http_profile import HttpProfile
from tencentcloud.cdb.v20170320 import cdb_client, models


class Cdb:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.page_number = 1
        self.page_size = 25
        self.client = self.create_client()

    def create_client(self):
        cred = credential.Credential(
            self.access_id, self.access_key)
        httpProfile = HttpProfile()
        httpProfile.endpoint = "cdb.tencentcloudapi.com"

        clientProfile = ClientProfile()
        clientProfile.httpProfile = httpProfile
        client = cdb_client.CdbClient(cred, self.region, clientProfile)
        return client

    def set_request(self):
        req = models.DescribeDBInstancesRequest()
        req.Limit = self.page_size
        req.Offset = (self.page_number - 1) * self.page_size
        return req

    def get_response(self):
        request = self.set_request()
        response_data = self.client.DescribeDBInstances(request)
        return response_data

    def get_server_count(self):
        response_data = self.get_response()
        return response_data.TotalCount

    def show(self):
        response_data = self.get_response()
        cdb_list = response_data.Items
        for cdb in cdb_list:
            print(cdb.to_json_string())

    def page(self):
        count = self.get_server_count()
        mod = count % self.page_size
        if mod:
            total_page_number = int(count / self.page_size) + 1
        else:
            total_page_number = int(count / self.page_size)

        for cur_page_number in range(1, total_page_number + 1):
            self.page_number = cur_page_number
            self.show()


def main(access_id, access_key, region):
    cdb = Cdb(access_id, access_key, region)
    cdb.page()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3])
