#!/data/Software/mydan/perl/bin/perl
use strict;
use warnings;

$|++;

use JSON;
use YAML::XS;
use MYDan::Util::OptConf;
use POSIX;

=head1 SYNOPSIS

 $0 --plugin c3mc-cloud-huawei-rds --account huawei
 $0 --plugin c3mc-cloud-huawei-rds --account huawei --raw # use account line
 $0 --plugin c3mc-cloud-huawei-rds --account huawei --aksk

=cut

my $option = MYDan::Util::OptConf->load();
my %o      = $option->get(    qw( plugin=s account=s raw aksk ) )->dump();
             $option->assert( qw( plugin ) );

my $id;
sub sync
{
    $id ++;
    my $d = shift @_;
    my ( $account, $argv ) = split /\s+/, $d, 2;
    $argv = $d if $o{raw};
    my @x = `$o{plugin} $argv`;
    die "Error" if $?;
    chomp @x;
    for ( @x )
    {
        my $data = JSON::decode_json( $_ );
        $data->{ account     } = $account;
        $data->{ accountuuid } = "$o{account}.$id";
        $data->{ _aksk_      } = $d if $o{aksk};

        $data->{ _synctime_  }  = POSIX::strftime( "%Y-%m-%d %H:%M:%S", localtime );
        print JSON::encode_json( $data ), "\n";
    }
}

if( $o{ account } )
{
    my $accountfile = "/data/Software/mydan/AGENT/device/conf/account/$o{account}";
    exit unless -f $accountfile;
    my @x = `cat $accountfile`;
    chomp @x;
    map{ sync( $_ ) }@x;
}
else
{
    while(<STDIN>)
    {
        chomp;
        sync( $_ )
    }
}
