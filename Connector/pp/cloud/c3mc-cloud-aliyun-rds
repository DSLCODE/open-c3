#!/usr/bin/env python2
# -*- coding: utf-8 -*-

import json
import sys
from aliyunsdkcore.client import AcsClient
from aliyunsdkrds.request.v20140815.DescribeDBInstancesRequest import DescribeDBInstancesRequest
from aliyunsdkrds.request.v20140815.DescribeDBInstanceAttributeRequest import DescribeDBInstanceAttributeRequest


class RDS:
    def __init__(self, access_id, access_key, region):
        self.region = region
        self.access_id = access_id
        self.access_key = access_key
        self.page_number = 1
        self.page_size = 5
        self.client = self.create_client()

    def create_client(self):
        client = AcsClient(self.access_id, self.access_key, self.region)
        return client

    def set_desc_request(self):
        request = DescribeDBInstancesRequest()
        request.set_accept_format('json')
        request.set_PageNumber(self.page_number)
        request.set_PageSize(self.page_size)
        return request

    def get_desc_response(self):
        request = self.set_desc_request()
        response = self.client.do_action_with_exception(request)
        response_data = json.loads(response)
        return response_data

    def get_rds_count(self):
        response_data = self.get_desc_response()
        return response_data['TotalRecordCount']

    def get_db_instance_id(self):
        response_data = self.get_desc_response()
        rds_data = response_data['Items']['DBInstance']
        db_instance_id_list = []
        for i in rds_data:
            db_instance_id_list.append(i.get('DBInstanceId'))
        return db_instance_id_list

    def get_attribute_response(self):
        instance_id_list = self.get_db_instance_id()
        rds_attribute_data_list = []
        request = DescribeDBInstanceAttributeRequest()
        request.set_accept_format('json')
        for instance_id in instance_id_list:
            request.set_DBInstanceId(instance_id)
            response = self.client.do_action_with_exception(request)
            response_data = json.loads(response)
            rds_attribute_data = response_data['Items']['DBInstanceAttribute'][0]
            rds_attribute_data_list.append(rds_attribute_data)
        return rds_attribute_data_list

    def show(self):
        rds_attribute_data_list = self.get_attribute_response()
        for i in rds_attribute_data_list:
            print(json.dumps(i))

    def page(self):
        count = self.get_rds_count()
        self.page_size = 100
        mod = count % self.page_size
        if mod:
            total_page_number = int(count / self.page_size) + 1
        else:
            total_page_number = int(count / self.page_size)
        for cur_page_number in range(1, total_page_number + 1):
            self.page_number = cur_page_number
            self.show()


def main(access_id, access_key, region):
    obj = RDS(access_id, access_key, region)
    obj.page()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3])
