#!/usr/bin/env python2
# -*- coding: utf-8 -*-

import sys
import json

from kscore.session import get_session
sys.path.append("/data/Software/mydan/Connector/lib/pp")


class Slb:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.client = self.create_client()

    def create_client(self):
        s = get_session()
        client = s.create_client(
            "slb", ks_access_key_id=self.access_id, ks_secret_access_key=self.access_key, region_name=self.region)
        return client

    def get_instances_from_response(self, response_data):
        return response_data["LoadBalancerDescriptions"]

    def list_instances(self):
        response = self.client.describe_load_balancers()
        instance_list = self.get_instances_from_response(response)

        tag_dict = self.list_tag()
        for i, s in enumerate(instance_list):
            if s["LoadBalancerId"] in tag_dict:
                instance_list[i]["Tag"] = tag_dict[s["LoadBalancerId"]]
        return instance_list

    def list_tag(self):
        from c3mc_cloud_ksyun_tag import KsyunTag
        return KsyunTag(self.access_id, self.access_key, self.region).get_tag_dict()

    def show(self):
        instance_list = self.list_instances()
        for instance in instance_list:
            print(json.dumps(instance, default=str))


def main(access_id, access_key, region):
    Slb(access_id, access_key, region).show()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3])
