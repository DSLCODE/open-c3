#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

import boto3


sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_cloud_aws_china_get_price_data import get_rds_instance_type_info_m


class RDS:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.client = self.create_client()
    
    def create_client(self):
        endpoint_url = f"https://rds.{self.region}.amazonaws.com"
        if self.region.startswith("cn"):
            endpoint_url = f"https://rds.{self.region}.amazonaws.com.cn"

        client = boto3.client(
            "rds",
            endpoint_url=endpoint_url,
            aws_access_key_id=self.access_id,
            aws_secret_access_key=self.access_key,
            region_name=self.region,
        )
        return client

    def get_cpu_and_memory(self, instance_type):
        return subprocess.getoutput(
            f"c3mc-query-aws-rds-instance-type-info {self.access_id} {self.access_key} {self.region} {instance_type}"
        )


    def get(self, old_data):
        """
        输出 aws rds 的详情(json格式)
        """

        field_name = subprocess.getoutput(
            "c3mc-cloud-get-real-field database aws-rds DBInstanceIdentifier"
        )

        response = self.client.describe_db_instances(
            DBInstanceIdentifier=old_data[field_name],
        )

        for instance in response["DBInstances"]:
            if instance["DBInstanceIdentifier"] != old_data[field_name]:
                continue

            instance["RegionId"] = self.region


            instance_type = instance["DBInstanceClass"]
            instance_type_info = {}

            if self.region.startswith("cn-"):
                if len(aws_instance_info_m) == 0:
                    aws_instance_info_m = get_rds_instance_type_info_m(self.region)

                deploy_mode = ""
                deploy_mode = "Multi-AZ" if instance["MultiAZ"] else "Single-AZ"
                instance_type_info = aws_instance_info_m[self.region][instance_type][deploy_mode]
                instance_type_info["memory"] = instance_type_info["memory"][: -len(" GiB")]
            else:
                try:
                    instance_type_info = self.get_cpu_and_memory(instance_type)
                    instance_type_info = json.loads(instance_type_info)
                except Exception as e:
                    raise RuntimeError("查询cpu和内存信息时出错") from e
            
            instance["_cpu_"] = instance_type_info["vcpu"]
            instance["_memory_"] = instance_type_info["memory"]

            return instance

        raise RuntimeError(f"根据 DBInstanceIdentifier {old_data[field_name]} 未找到 aws rds")


def main(data, access_id, access_key, region):
    info = RDS(access_id, access_key, region).get(data)
    print(json.dumps(info, default=str))


if __name__ == "__main__":
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise RuntimeError("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3], sys.argv[4])
