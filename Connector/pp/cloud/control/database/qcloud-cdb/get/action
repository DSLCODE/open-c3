#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

from tencentcloud.common import credential
from tencentcloud.common.profile.client_profile import ClientProfile
from tencentcloud.common.profile.http_profile import HttpProfile
from tencentcloud.cdb.v20170320 import cdb_client, models


def get(data, access_id, access_key, region):
    """
        输出 qcloud cdb 的详情(json格式)
    """
    cred = credential.Credential(access_id, access_key)
    httpProfile = HttpProfile()
    httpProfile.endpoint = "cdb.tencentcloudapi.com"

    clientProfile = ClientProfile()
    clientProfile.httpProfile = httpProfile
    client = cdb_client.CdbClient(cred, region, clientProfile)

    field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field database qcloud-cdb InstanceId")

    status_code_m = {
        0: "创建中",
        1: "运行中",
        4: "正在进行隔离操作",
        5: "隔离中（可在回收站恢复开机）",
    }

    req = models.DescribeDBInstancesRequest()
    params = {
        "InstanceIds": [data[field_name]]
    }
    req.from_json_string(json.dumps(params))

    resp = client.DescribeDBInstances(req)
    for instance in resp.Items:
        if instance.InstanceId == data[field_name]:
            instance = json.loads(instance.to_json_string())
            instance["StatusZhDesc"] = status_code_m[instance["Status"]]
            return instance
    raise Exception("根据 InstanceId {} 未找到 qcloud cdb".format(data[field_name]))


def main(data, access_id, access_key, region):
    data = get(data, access_id, access_key, region)
    print(json.dumps(data, default=str))


if __name__ == '__main__':
    l = []
    for line in sys.stdin:
        l.append(line)
    if len(l) == 0 or len(l) > 1:
        raise Exception("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3], sys.argv[4])
