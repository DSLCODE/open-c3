#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

from tencentcloud.common import credential
from tencentcloud.common.profile.client_profile import ClientProfile
from tencentcloud.common.profile.http_profile import HttpProfile
from tencentcloud.sqlserver.v20180328 import sqlserver_client, models


def get(data, access_id, access_key, region):
    """
        输出 qcloud sqlserver 的详情(json格式)
    """
    cred = credential.Credential(access_id, access_key)
    httpProfile = HttpProfile()
    httpProfile.endpoint = "sqlserver.tencentcloudapi.com"

    clientProfile = ClientProfile()
    clientProfile.httpProfile = httpProfile
    client = sqlserver_client.SqlserverClient(cred, region, clientProfile)

    field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field database qcloud-sqlserver InstanceId")

    status_code_m = {
        1: "申请中",
        2: "运行中",
        3: "受限运行中(主备切换中)",
        4: "已隔离",
        5: "回收中",
        6: "已回收",
        7: "任务执行中(实例做备份、回档等操作)",
        8: "已下线",
        9: "实例扩容中",
        10: "实例迁移中",
        11: "只读",
        12: "重启中",
        13: "实例修改中且待切换",
        14: "订阅发布创建中",
        15: "订阅发布修改中",
        16: "实例修改中且切换中",
        17: "创建RO副本中",
    }

    req = models.DescribeDBInstancesRequest()
    params = {
        "InstanceIds": [data[field_name]]
    }
    req.from_json_string(json.dumps(params))

    resp = client.DescribeDBInstances(req)
    for instance in resp.DBInstances:
        if instance.InstanceId == data[field_name]:
            data = json.loads(str(instance))
            if "Status" in data and isinstance(data["Status"], int):
                data["StatusZhDesc"] = status_code_m[data["Status"]]
            return data
    raise Exception(
        "根据 InstanceId {} 未找到 qcloud sqlserver".format(data[field_name]))


def main(data, access_id, access_key, region):
    data = get(data, access_id, access_key, region)
    print(json.dumps(data, default=str))


if __name__ == '__main__':
    l = []
    for line in sys.stdin:
        l.append(line)
    if len(l) == 0 or len(l) > 1:
        raise Exception("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3], sys.argv[4])
