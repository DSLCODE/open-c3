#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

import boto3


sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_cloud_aws_elbv2 import ELBV2


def get(data, access_id, access_key, region):
    """
        输出 aws alb 的详情(json格式)
    """
    client = boto3.client(
        "elbv2",
        aws_access_key_id=access_id,
        aws_secret_access_key=access_key,
        region_name=region,
    )

    field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field networking aws-alb LoadBalancerName")

    response = client.describe_load_balancers(
        Names=[data[field_name]],
    )

    lib_client = ELBV2(access_id, access_key, region)

    for instance in response["LoadBalancers"]:
        if instance["LoadBalancerName"] == data[field_name]:
            instance["Tag"] = lib_client.list_tags(instance["LoadBalancerArn"])[instance["LoadBalancerArn"]]
            return instance
    raise RuntimeError(f"根据 LoadBalancerName {data[field_name]} 未找到 aws alb")


def main(data, access_id, access_key, region):
    data = get(data, access_id, access_key, region)
    print(json.dumps(data, default=str))


if __name__ == '__main__':
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise RuntimeError("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3], sys.argv[4])
