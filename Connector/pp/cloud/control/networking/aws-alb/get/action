#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

import boto3


def get(data, access_id, access_key, region):
    """
        输出 aws alb 的详情(json格式)
    """
    client = boto3.client(
        "elbv2",
        aws_access_key_id=access_id,
        aws_secret_access_key=access_key,
        region_name=region,
    )

    field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field networking aws-alb LoadBalancerName")

    response = client.describe_load_balancers(
        Names=[data[field_name]],
    )

    for instance in response["LoadBalancers"]:
        if instance["LoadBalancerName"] == data[field_name]:
            instance["Tag"] = list_tag(
                access_id, access_key, region, instance["LoadBalancerArn"])
            return instance
    raise Exception(
        "根据 LoadBalancerName {} 未找到 aws alb".format(data[field_name]))


def list_tag(access_id, access_key, region, arn):
    sys.path.append("/data/Software/mydan/Connector/lib/pp")
    from c3mc_cloud_aws_alb_get_tag import GetTag
    return GetTag(access_id, access_key, region).list_tag_for_arn(arn)


def main(data, access_id, access_key, region):
    data = get(data, access_id, access_key, region)
    print(json.dumps(data, default=str))


if __name__ == '__main__':
    l = []
    for line in sys.stdin:
        l.append(line)
    if len(l) == 0 or len(l) > 1:
        raise Exception("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3], sys.argv[4])
