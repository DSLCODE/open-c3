#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess

from huaweicloudsdkcore.auth.credentials import BasicCredentials
from huaweicloudsdkelb.v2.region.elb_region import ElbRegion
from huaweicloudsdkelb.v2 import *


class ElbBackendServers:
    """
        输出huawei elb的后端服务器列表信息
    """

    def __init__(self, access_id, access_key, region, load_balancer_id):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.load_balancer_id = load_balancer_id
        self.client = self.create_client()

    def create_client(self):
        credentials = BasicCredentials(
            self.access_id, self.access_key)

        client = ElbClient.new_builder() \
            .with_credentials(credentials) \
            .with_region(ElbRegion.value_of(self.region)) \
            .build()
        return client

    def get_elb_info(self):
        output = subprocess.getoutput(
            "c3mc-cloud-huawei-elb-by-id {} {} {} {}".format(
                self.access_id, self.access_key, self.region, self.load_balancer_id))
        return output

    def list_members(self, pool_id):
        request = ListMembersRequest()
        request.pool_id = pool_id
        response = self.client.list_members(request)
        return response

    def get_backend_server_info(self):
        result = []
        elb_info = json.loads(self.get_elb_info())
        m = {}
        for pool in elb_info["pools"]:
            pool_resp = self.list_members(pool["id"])
            for item in pool_resp.members:
                if item.address in m:
                    continue
                m[item.address] = {}
                result.append(item)
        return result

    def show(self):
        result = self.get_backend_server_info()
        print(str(result))


def main(access_id, access_key, region, load_balancer_id):
    ElbBackendServers(access_id, access_key, region, load_balancer_id).show()


if __name__ == '__main__':
    l = []
    for line in sys.stdin:
        l.append(line)
    if len(l) == 0 or len(l) > 1:
        raise Exception("数据格式错误, 需要一行json数据")

    data = json.loads(l[0])
    main(sys.argv[2], sys.argv[3], sys.argv[5], data["实例ID"])
