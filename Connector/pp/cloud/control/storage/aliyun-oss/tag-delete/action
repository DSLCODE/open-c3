#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess


sys.path.append("/data/Software/mydan/Connector/lib/pp")
from c3mc_cloud_aliyun_oss import LibAliyunOss


def tag_delete(data, access_id, access_key):
    location_field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field storage aliyun-oss location")
    name_field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field storage aliyun-oss name")

    lib_client = LibAliyunOss(access_id, access_key, data[location_field_name], data[name_field_name])

    curr_tag_list = get_oss_tag(
        access_id, access_key, data[location_field_name], data[name_field_name])

    need_delete_key_set = set()
    for item in data["_control_"]["tag-delete"]["tags"].split(","):
        parts = item.split("=")
        if len(parts) != 2:
            continue
        need_delete_key_set.add(parts[0])

    new_tag_list = [
        {
            "key": tag["key"],
            "value": tag["value"],
        }
        for tag in curr_tag_list
        if tag["key"] not in need_delete_key_set
    ]
    lib_client.update_tags(new_tag_list)
    


def get_oss_tag(access_id, access_key, location, bucket_name):
    sys.path.append("/data/Software/mydan/Connector/lib/pp")
    from c3mc_cloud_aliyun_oss import LibAliyunOss
    return LibAliyunOss(access_id, access_key, location, bucket_name).list_tag()


def main(data, access_id, access_key):
    tag_delete(data, access_id, access_key)


if __name__ == '__main__':
    l = list(sys.stdin)
    if not l or len(l) > 1:
        raise RuntimeError("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3])
