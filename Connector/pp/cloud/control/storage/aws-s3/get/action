#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import subprocess


def get(data, access_id, access_key, region):
    """
        输出 aws s3 的详情(json格式)
    """

    name_field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field storage aws-s3 BucketName")
    create_field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field storage aws-s3 CreationDate")
    region_field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field storage aws-s3 RegionId")
    uuid_field_name = subprocess.getoutput(
        "c3mc-cloud-get-real-field storage aws-s3 UUID")

    # 目前s3的详情都是拼出来的，唯一可能发生变化的是标签
    return {
        "UUID": data[uuid_field_name],
        "BucketName": data[name_field_name],
        "CreationDate": data[create_field_name],
        "RegionId": data[region_field_name],
        "Tags": list_tag(access_id, access_key, region, data[name_field_name])
    }


def list_tag(access_id, access_key, region, bucket_name):
    sys.path.append("/data/Software/mydan/Connector/lib/pp")
    from c3mc_cloud_aws_s3_get_tag import GetTag
    return GetTag(access_id, access_key, region, bucket_name).list_tag()


def main(data, access_id, access_key, region):
    data = get(data, access_id, access_key, region)
    print(json.dumps(data, default=str))


if __name__ == '__main__':
    l = []
    for line in sys.stdin:
        l.append(line)
    if len(l) == 0 or len(l) > 1:
        raise Exception("数据格式不对, 需要一行json字符串")

    main(json.loads(l[0]), sys.argv[2], sys.argv[3], sys.argv[4])
