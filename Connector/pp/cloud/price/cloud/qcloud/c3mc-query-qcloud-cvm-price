#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import sys

from tencentcloud.common import credential
from tencentcloud.common.profile.client_profile import ClientProfile
from tencentcloud.common.profile.http_profile import HttpProfile
from tencentcloud.cvm.v20170312 import cvm_client, models


def get_cvm_price(access_id, access_key, region, zone, instance_type):
    cred = credential.Credential(access_id, access_key)
    httpProfile = HttpProfile()
    httpProfile.endpoint = "cvm.tencentcloudapi.com"

    clientProfile = ClientProfile()
    clientProfile.httpProfile = httpProfile
    client = cvm_client.CvmClient(cred, region, clientProfile)

    req = models.InquiryPriceRunInstancesRequest()
    params = {
        "InstanceChargeType": "PREPAID",
        "InstanceChargePrepaid": {
            "Period": 1,
            "RenewFlag": "DISABLE_NOTIFY_AND_MANUAL_RENEW"
        },
        "Placement": {
            "Zone": zone
        },
        "InstanceType": instance_type,
        # 用一个公共的centos镜像id进行查询
        "ImageId": "img-3la7wgnt",
        "InstanceCount": 1
    }
    req.from_json_string(json.dumps(params))

    try:
        resp = client.InquiryPriceRunInstances(req)
    except Exception as e:
        if "ResourceUnavailable" in str(e):
            return ""
        else:
            raise e
    # 单位: 元
    return "{} {}".format(resp.Price.InstancePrice.DiscountPrice, "CNY")

def get_price_info(access_id, access_key, region, zone, instance_type):
    price = get_cvm_price(access_id, access_key, region, zone, instance_type)
    if price == "":
        return None
    return "qcloud-cvm@{}@{}@{};{}".format(region, zone, instance_type, price)


def main(access_id, access_key, region, zone, instance_type):
    data = get_price_info(access_id, access_key, region, zone, instance_type)
    if data is not None:
        print(data)


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5])
