#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import sys

from tencentcloud.common import credential
from tencentcloud.common.profile.client_profile import ClientProfile
from tencentcloud.common.profile.http_profile import HttpProfile
from tencentcloud.mongodb.v20190725 import mongodb_client, models


def get_mongodb_price(access_id, access_key, region, zone, memory, disk_size, cluster_type, replication_set_num, node_num, mongo_version, machine_type):
    """
        memory: 单位GB
        disk_size: 单位GB
    """
    cred = credential.Credential(access_id, access_key)
    httpProfile = HttpProfile()
    httpProfile.endpoint = "mongodb.tencentcloudapi.com"

    clientProfile = ClientProfile()
    clientProfile.httpProfile = httpProfile
    client = mongodb_client.MongodbClient(cred, region, clientProfile)

    req = models.InquirePriceCreateDBInstancesRequest()

    cluster_type_str = ""
    if int(cluster_type) == 0:
        cluster_type_str = "REPLSET"
    else:
        cluster_type_str = "SHARD"
    
    params = {
        "Zone": zone,
        "NodeNum": int(node_num),
        "Memory": int(float(memory) / 1024),
        "Volume": int(float(disk_size) / 1024),
        "MongoVersion": mongo_version,
        "MachineCode": machine_type,
        "GoodsNum": 1,
        "InstanceChargeType": "PREPAID",
        "Period": 1,
        "ClusterType": cluster_type_str,
        "ReplicateSetNum": int(replication_set_num)
    }
    req.from_json_string(json.dumps(params))

    try:
        resp = client.InquirePriceCreateDBInstances(req)
    except Exception as e:
        # 腾讯去掉了一些旧的机型配置，导致根据某些参数会询价失败
        if "InvalidParameter" in str(e):
            return ""
        else:
            raise e
    # 单位: 元
    return "{} {}".format(resp.Price.DiscountPrice, "CNY")

def get_price_info(access_id, access_key, region, zone, memory, disk_size, cluster_type, replication_set_num, node_num, mongo_version, machine_type):
    price = get_mongodb_price(access_id, access_key, region, zone, memory, disk_size, cluster_type, replication_set_num, node_num, mongo_version, machine_type)
    if price == "":
        return None
    return "qcloud-mongodb@{}@{}@{}@{}@{}@{}@{}@{}@{};{}".format(
            region, zone, int(float(memory)), int(float(disk_size)), cluster_type, replication_set_num, node_num, mongo_version, machine_type, price)
 


def main(access_id, access_key, region, zone, memory, disk_size, cluster_type, replication_set_num, node_num, mongo_version, machine_type):
    data = get_price_info(access_id, access_key, region, zone,
                             memory, disk_size, cluster_type, replication_set_num, node_num, mongo_version, machine_type)
    if data is not None:
        print(data)


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3],
         sys.argv[4], sys.argv[5], sys.argv[6], sys.argv[7], sys.argv[8], sys.argv[9], sys.argv[10], sys.argv[11])
