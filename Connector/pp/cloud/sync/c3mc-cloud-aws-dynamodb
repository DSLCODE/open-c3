#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json

import boto3


class Dynamodb:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.bucket_list = []
        self.client = self.create_client()

    def create_client(self):
        client = boto3.client(
            "dynamodb",
            aws_access_key_id=self.access_id,
            aws_secret_access_key=self.access_key,
            region_name=self.region,
        )
        return client

    def list_instance(self):
        instance_list = []
        response = self.client.list_tables()
        for table_name in response["TableNames"]:
            table_info = self.client.describe_table(TableName=table_name)
            table_arn = table_info["Table"]["TableArn"]

            item = {}
            for key, value in table_info["Table"].items():
                item[key] = value

            item["RegionId"] = self.region
            item["Tag"] = self.list_tag(
                self.access_id, self.access_key, self.region, table_arn)
            instance_list.append(item)
        return instance_list

    def list_tag(self, access_id, access_key, region, arn):
        sys.path.append("/data/Software/mydan/Connector/lib/pp")
        from c3mc_cloud_aws_dynamodb_get_tag import GetTag
        return GetTag(access_id, access_key, region, arn).list_tag()

    def show(self):
        instance_list = self.list_instance()
        for instance in instance_list:
            print(json.dumps(instance, default=str))


def main(access_id, access_key, region):
    Dynamodb(access_id, access_key, region).show()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3])
