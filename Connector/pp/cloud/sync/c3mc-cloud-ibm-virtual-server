#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json
import SoftLayer

class IBMVirtualServer:
    def __init__(self, api_key, api_secret, vpc_name):
        self.api_key = api_key
        self.api_secret = api_secret
        self.vpc_name = vpc_name
    
    def get_server_list(self):
        server_list = []
        has_items = True

        client = SoftLayer.create_client_from_env(username=self.api_key, api_key=self.api_secret)

        mask = 'accountId,datacenter,createDate, dedicatedAccountHostOnlyFlag, deviceStatusId, domain,' \
                'fullyQualifiedDomainName, hostname, id, lastPowerStateId, lastVerifiedDate,' \
                'maxCpu, maxCpuUnits, maxMemory, metricPollDate, modifyDate, placementGroupId,' \
                'provisionDate, startCpus, statusId, typeId, uuid, globalIdentifier,' \
                'primaryBackendIpAddress, primaryIpAddress, status.keyName, status.name, tagReferences' 

        limit = 50
        offset = 0
        while has_items:
            items = client['SoftLayer_Account'].getVirtualGuests(mask=mask,
                                                                    limit=limit,
                                                                    offset=offset)
            for i in range(len(items)):
                if self.vpc_name is not None:
                    items[i]["vpcName"] = self.vpc_name
                items[i]["tagList"] = self.extract_tag(items[i]["tagReferences"])
            server_list.extend(items)

            if len(items) > 0:
                offset += limit
            else:
                has_items = False
        return server_list
    
    def extract_tag(self, tag_reference_list):
        tag_list = []
        for tag_reference_item in tag_reference_list:
            tag_str = tag_reference_item["tag"]["name"]
            tag_str = tag_str.replace("__", "@")
            tag_list.append(tag_str)
        return tag_list
    
    def display(self):
        server_list = self.get_server_list()

        for server in server_list:
            print(json.dumps(server))


def main(username, password, raw_vpc_name):
    vpc_name = None
    if raw_vpc_name.lower() != "none":
        vpc_name = raw_vpc_name
    IBMVirtualServer(username, password, vpc_name).display()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3])
