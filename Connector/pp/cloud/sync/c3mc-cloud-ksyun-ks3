#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json

from ks3.connection import Connection


# C3TODO 230303 目前拉取ks3使用了kec的区域列表
# 但是kec的某些区域不在官方的域名列表里，比如cn-taipei-1,
# 此时拉取会出现域名解析错误, 因此拉取ks3时，
# 不在官方区域列表里的区域被自动跳过了

region_to_endpoint = {
    "cn-beijing-6": "ks3-cn-beijing.ksyuncs.com",
    "cn-beijing-fin": "ks3-jr-beijing.ksyuncs.com",
    "cn-shanghai-2": "ks3-cn-shanghai.ksyuncs.com",
    "cn-shanghai-fin": "ks3-jr-shanghai.ksyuncs.com",
    "cn-guangzhou-1": "ks3-cn-guangzhou.ksyuncs.com",
    "cn-hongkong-2": "ks3-cn-hk-1.ksyuncs.com",
    "ap-singapore-1": "ks3-sgp.ksyuncs.com",
    "eu-east-1": "ks3-rus.ksyuncs.com",
}


class Ks3:
    def __init__(self, access_id, access_key, region):
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.client = self.create_client()

    def create_client(self):
        return Connection(
            self.access_id,
            self.access_key,
            region_to_endpoint[self.region],
        )

    def list_instances(self):
        buckets = self.client.get_all_buckets()
        return [
            {
                "name": ksyun_bucket.name,
                "region_id": self.region,
                "creation_date": ksyun_bucket.creation_date,
            }
            for ksyun_bucket in buckets
        ]

    def show(self):
        instance_list = self.list_instances()
        for instance in instance_list:
            print(json.dumps(instance, default=str))


def main(access_id, access_key, region):
    if region not in region_to_endpoint:
        return

    try:
        Ks3(access_id, access_key, region).show()
    except Exception as e:
        print(f"同步金山云ks3资源出错. access_id: {access_id}, region: {region}", file=sys.stderr)
        raise e


if __name__ == "__main__":
    main(sys.argv[1], sys.argv[2], sys.argv[3])
