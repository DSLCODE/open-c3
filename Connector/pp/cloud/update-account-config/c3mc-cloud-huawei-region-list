#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import requests
from bs4 import BeautifulSoup


class Huawei:
    def __init__(self, access_id, access_key, iam_user_id, resource_type):
        self.access_id = access_id
        self.access_key = access_key
        self.iam_user_id = iam_user_id
        self.resource_type = resource_type

    def list_regions(self, title):
        # 华为云目前没有可以直接查询区域列表的接口, 这里使用爬虫从华为云官网文档获取区域
        url = 'https://developer.huaweicloud.com/endpoint?all'
        response = requests.get(url)
        html_content = response.text

        soup = BeautifulSoup(html_content, 'html.parser')
        target_div = soup.find('div', string=title)
        parent = target_div.find_parent()
        target_table = parent.find('table')

        result = []
        for row in target_table.find_all('tr'):
            i = 0
            for cell in row.find_all('td'):
                if i == 1:
                    result.append(cell.text)
                    break
                i += 1
        return sorted(result)

    def display(self):
        regions = []

        if self.resource_type == "dds":
            regions = self.list_regions("文档数据库服务 DDS")
        elif self.resource_type == "ecs":
            regions = self.list_regions("弹性云服务 ECS")
        elif self.resource_type == "ecs-volume":
            regions = self.list_regions("云硬盘 EVS")
        elif self.resource_type == "elb":
            regions = self.list_regions("弹性负载均衡 ELB")
        elif self.resource_type == "nosql":
            regions = self.list_regions("云数据库 GaussDB NoSQL")
        elif self.resource_type == "obs":
            regions = self.list_regions("对象存储服务 OBS")
        elif self.resource_type == "rds":
            regions = self.list_regions("云数据库 RDS")
        elif self.resource_type == "redis":
            regions = self.list_regions("分布式缓存服务 Redis")
        else:
            raise Exception("不支持的资源类型")

        for region in regions:
            print(region)

def main(access_id, access_key, iam_user_id, resource_type):
    Huawei(access_id, access_key, iam_user_id, resource_type).display()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[4], sys.argv[5])
