#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import os
import time
import subprocess
import sys


def get_resource_type_from_template(cloud):
    output = subprocess.run(
        ["c3mc-cloud-get-resource-type-list", cloud], capture_output=True, text=True)
    if output.returncode != 0:
        print(output.stderr, file=sys.stderr)
        exit(1)
    return [item.strip() for item in output.stdout.split("\n") if item.strip() != ""]


def get_resource_type_from_extaccount(cloud):
    dir_path = '/data/Software/mydan/AGENT/device/conf/account'
    prefix = f"{cloud}."

    return [
        filename[len(prefix):]
        for filename in os.listdir(dir_path)
        if filename.startswith(prefix)
    ]


def update_accounts():
    current_unix_seconds = str(int(time.time()))
    file_path = f"/tmp/update_cloud_account_caller_{current_unix_seconds}"
    if os.path.isfile(file_path):
        return

    open(file_path, "w").close()

    for cloud in ["aliyun", "aws", "google", "huawei", "ksyun", "qcloud"]:
        ok = False

        # 检查是否有新增资源类型需要创建对应扩展账号文件
        template_resource_type_list = get_resource_type_from_template(cloud)
        extaccount_resource_type_list = get_resource_type_from_extaccount(cloud)
        for item in extaccount_resource_type_list:
            if item in template_resource_type_list:
                template_resource_type_list.remove(item)
        if len(template_resource_type_list) > 0:
            ok = True

        if not ok:
            # 检查是否最近有修改原始账号文件
            filepath = f'/data/Software/mydan/AGENT/device/conf/accountx/{cloud}x'
            if not os.path.isfile(filepath):
                continue

            if time.time() - os.path.getmtime(filepath) < 600:
                ok = True

        if ok:
            os.system('/usr/bin/c3mc-cloud-update-cloud-account')
            break

    os.remove(file_path)


def main():
    update_accounts()


if __name__ == '__main__':
    main()
