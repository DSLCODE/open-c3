#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/AGENT/lib
use strict;
use warnings;

binmode STDIN,  ':utf8';
binmode STDOUT, ':utf8';
binmode STDERR, ':utf8';

$|++;

use YAML::XS;
use MYDan::Util::OptConf;

=head1 SYNOPSIS

 $0
 $0 --output /path/foo.yaml

=cut

my $option = MYDan::Util::OptConf->load();
my %o      = $option->get( qw( output=s ) )->dump();

# ip map: 10.10.10.10 => +{ treeid1 => 1, treeid2 => 10 }
my %ip;

while(<STDIN>)
{
   chomp;
   my ( $treeid, $ip ) = split /;/, $_;
   $ip{ $ip }{ $treeid }++;
}

my @include;
my $includetodo = 0;
my $includefile = "/data/open-c3-data/monitor-config/redis.include.tree.txt";

if( -f $includefile )
{
    $includetodo = 1;
    @include = `cat '$includefile'`;
    chomp @include;
    die "include null" unless @include; # 防止获取内容失败
}


# 判断服务树是否包含在include.tree.txt文件中描述的范围内.
# 主机可能挂载在多个服务树节点中，只要其中一个服务树是 include 中描述的服务树，或者是它的子树即可.
sub grepInclude
{
    for my $treename ( @_ )
    {
        map{ return 1 if $treename eq $_ || index( $treename, "$_." ) == 0; }@include;
    }
    return 0;
}

my @exclude;
my $excludetodo = 0;
my $excludefile = "/data/open-c3-data/monitor-config/redis.exclude.tree.txt";

if( -f $excludefile )
{
    $excludetodo = 1;
    @exclude = `cat '$excludefile'`;
    chomp @exclude;
    die "exclude null" unless @exclude; # 防止获取内容失败
}

sub grepExclude
{
    for my $treename ( @_ )
    {
        map{ return 1 if $treename eq $_ || index( $treename, "$_." ) == 0; }@exclude;
    }
    return 0;
}

my %excludenode;
my $excludenodefile = "/data/open-c3-data/monitor-config/redis.exclude.node.txt";
if( -f $excludenodefile )
{
    my @x = `cat '$excludenodefile'`;
    chomp @x;
    map{ $excludenode{$_} ++ }@x;
}

# treemap: treeid => treename
my    @treemap = `c3mc-base-treemap`;
die if $?;
chomp @treemap;

my %treemap;
for( @treemap )
{
    my ( $treeid, $treename ) = split /;/, $_;
    $treename           =~ s/[^a-zA-Z0-9_\.\-]//g;;
    $treemap{ $treeid } =  $treename;
}

# target
my @target;
for my $ip ( keys %ip )
{
    my %lables = ( instance => $ip, "__metrics_path__" => "/api/agent/v3/redis/metrics/$ip", treeid => 1 );

    next if $includetodo && ! grepInclude( map{ $treemap{$_} // "" }keys %{$ip{$ip}} );
    next if $excludetodo &&   grepExclude( map{ $treemap{$_} // "" }keys %{$ip{$ip}} );

    next if $excludenode{$ip};

    map{
        $lables{"treeid_$_"} = $treemap{$_} || "1";
    }keys %{$ip{$ip}};

    push @target, +{ targets => [ 'openc3-server' ], labels => \%lables };
}

if( $o{output} )
{
    my $temp = "$o{output}.temp.$$";
    YAML::XS::DumpFile $temp, \@target;
    rename $temp, $o{output} or die "rename fail: $!";
    exit;
}

print YAML::XS::Dump \@target;
