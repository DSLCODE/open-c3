#!/data/Software/mydan/perl/bin/perl
use strict;
use warnings;

binmode STDIN,  ':utf8';
binmode STDOUT, ':utf8';
binmode STDERR, ':utf8';

$|++;

use YAML::XS;
use FindBin qw( $RealBin );
use MYDan::Util::OptConf;

=head1 SYNOPSIS

 $0
 $0 --alias /my/product/alias.file

=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->get( qw( alias=s ) )->dump();

my    @x = `c3mc-device-cat-all --col account,type,subtype,uuid,treename`;
chomp @x;
shift @x;
map{ s/\t/;/g }@x;

my $config = eval{ YAML::XS::LoadFile "$RealBin/conf/config.yml"; };
die "load config fail: $@" if $@;
die "isolatinglayer undef" unless my $isolatinglayer = $config->{isolatinglayer};

sub getproduct
{
    my %temp;
    for ( split /,/, shift @_ )
    {
        my @name = split /\./, $_;
        die "layer missing" if @name < $isolatinglayer;
        my $temp = join '.', splice @name, 0, $isolatinglayer;
        $temp{$temp} = 1;
    }
    my @p = keys %temp;
    die "nofind project"   unless @p;
    die "multiple product" unless @p == 1;
    return $p[0];
}

my @res;
for my $x ( @x )
{
    my @xx = split /;/, $x, 5;
    $xx[4] = eval{ getproduct( $xx[4] ); };
    if( $@ )
    {
        warn "Error product: $x => $@";
        next;
    }

    push @res, \@xx;
}

unless( $o{alias} )
{
    map{ printf "%s\n", join ';', @$_; }@res;
    exit;
}

my    @alias = `cat '$o{alias}'`;
chomp @alias;

die "nofind alias" unless @alias;

my %alias;
for( @alias )
{
    my @x = split /;/, $_;
    $alias{$x[0]} = $x[1];
}

for( @res )
{
    my @xx = @$_;
    $xx[4] = $alias{$xx[4]};

    unless( $xx[4] )
    {
        warn "nofind alias: @xx";
        next;
    }
    printf "%s\n", join ';', @xx;
}
