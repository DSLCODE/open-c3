#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/JOB/lib -I/data/Software/mydan/JOB/private/lib
use strict;
use warnings;
use FindBin qw( $RealBin );
use Code;
use MYDB;
use Encode;
use MIME::Base64;

exit unless my $argv = shift;

my ( $u, $projectid, $addr, $port, $redisauth );

eval{
    if( $argv =~ /redisaddr=\$\{_redisaddr_\}/ )
    {
        die "no auth\n";
    }
    elsif( $argv =~ /^\?u=(.+)&projectid=(\d+)&redisaddr=([a-zA-Z0-9\.\-,]+):(\d+)&redisauth=([a-zA-Z0-9\.\@\_\-=]*)$/ )
    {
        ( $u, $projectid, $addr, $port, $redisauth ) = ( $1, $2, $3, $4, $5 );
    }
    else
    {
        die "param error\n";
    }
    
    print "projectid: $projectid\n";
    print "redisaddr: $addr:$port\n";
    
    my $pw = '';
    if( $redisauth )
    {
        my $auth = Encode::decode("utf8",  MIME::Base64::decode_base64( $redisauth ));
        die "auth format error" if $auth =~ /'/;
        $pw = "-a '$auth'";
    }
    system "redis-cli -h '$addr' -p '$port' $pw";
};

print $@ if $@;

sleep 1000;
