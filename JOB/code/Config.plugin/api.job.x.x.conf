#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/JOB/lib -I/data/Software/mydan/JOB/private/lib
use strict;
use warnings;
use Code;
use YAML::XS;
use FindBin qw( $RealBin );

$| ++;

=head1 SYNOPSIS

=cut

return sub
{
    my %param = @_;

    my ( $Config, $envname ) = @param{qw( Config envname )};

    die "envinfo config undef" unless $Config->{envinfo};

    my %macro = ( %{$Config->{envinfo}}, envname => $envname );


    die "config/api.job.x.x.conf.Template null" unless my $conf = `cat $RealBin/../config/api.job.x.x.conf.Template`;

    my @conf;

    my $port = $Config->{port};


    push @conf, 'upstream job_api{';

    for my $node ( keys %{$Config->{host}} )
    {
        for my $port ( $port->{api}{from} .. $port->{api}{to} )
        {
            push @conf, "  server $Config->{host}{$node}{inip}:$port;";
        }
        push @conf, "";
    }

    push @conf, '}';

    for my $node ( keys %{$Config->{host}} )
    {
        push @conf, "upstream job_api_slave_$node {";

        for my $port ( $port->{'api.slave'}{from} .. $port->{'api.slave'}{to} )
        {
            push @conf, "  server $Config->{host}{$node}{inip}:$port;";
        }

        push @conf, '}';
        push @conf, "";
    }

    my $hostname = `c3mc-base-hostname`;
    chomp $hostname;
    unless( $Config->{host}{$hostname} )
    {
        push @conf, "upstream job_api_slave_$hostname {";

        for my $port ( $port->{'api.slave'}{from} .. $port->{'api.slave'}{to} )
        {
            push @conf, "  server 127.0.0.1:$port;";
        }

        push @conf, '}';
        push @conf, "";
 
    }

    die "domainname undef" unless $macro{domainname};
    for my $k ( keys %macro )
    {
        $conf =~ s#\[\[:$k:\]\]#$macro{$k}#g;
    }

    open my $H , ">$RealBin/../conf/api.job.open-c3.org.conf" or die "open conf/api.job.open-c3.org.conf fail:$!";
    for( @conf )
    {
        print $H "$_\n";
    }
    print $H $conf;
    close $H;
}
