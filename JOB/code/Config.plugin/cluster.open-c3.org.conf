#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/JOB/lib -I/data/Software/mydan/JOB/private/lib
use strict;
use warnings;
use Code;
use YAML::XS;
use FindBin qw( $RealBin );

$| ++;

=head1 SYNOPSIS

=cut

return sub
{
    my %param = @_;

    my ( $Config, $envname ) = @param{qw( Config envname )};

    die "envinfo config undef" unless $Config->{envinfo};

    my %macro = ( %{$Config->{envinfo}}, envname => $envname );

    die "config/cluster.open-c3.org.conf.Template null" unless my $conf = `cat $RealBin/../config/cluster.open-c3.org.conf.Template`;

    my $c3domain = `c3mc-sys-ctl sys.cluster.domain`;
    my $c3slave  = `c3mc-sys-ctl sys.cluster.slave`;

    chomp $c3domain;
    chomp $c3slave;

    $macro{c3clusterdomain} = $c3domain || 'cluster.openc3.org';
    $c3slave ||= 'openc3-srv-docker:127.0.0.1:88';

    my @conf;
    for ( split /,/, $c3slave )
    {
        my ( $node, $api ) = split /:/, $_, 2;
        next unless $node && $node =~ /^[a-zA-Z0-9_\-\.]+$/;
        next unless $api && ( $api =~ /^\d+\.\d+\.\d+\.\d+$/ || $api =~ /^\d+\.\d+\.\d+\.\d+:\d+$/ );
        push @conf, "upstream c3slave_api_$node {";
        push @conf, "  server $api;";
        push @conf, '}';
        push @conf, "";
    }

    die "domainname undef" unless $macro{domainname};
    for my $k ( keys %macro )
    {
        $conf =~ s#\[\[:$k:\]\]#$macro{$k}#g;
    }

    open my $H , ">$RealBin/../conf/cluster.open-c3.org.conf" or die "open conf/cluster.open-c3.org.conf fail:$!";
    for( @conf )
    {
        print $H "$_\n";
    }
    print $H $conf;
    close $H;
}
